/**
 * @file probabilitySubfunc.h
 * @brief probability subfunction.h
 *
 */

#ifndef PROBABILITYSUBFUNC_H_
#define PROBABILITYSUBFUNC_H_

#include "../preprocessor.h"

unsigned int MainGameSlot1ProbabilityMatrix[3][15][9] = {
	//Game Level Small
	{
		{   200, 2135, 1740, 1600, 1700, 1100, 1000, 520,   5 },// 82 %
		{   200, 2130, 1740, 1600, 1400, 1100, 1000, 820,  10 },// 84 %
		{   200, 2130, 1740, 1600, 1400, 1100, 1000, 820,  10 },// 86 %
		{   200, 2130, 1700, 1600, 1400, 1100, 1000, 820,  50 },// 88 %
		{   200, 2100, 1690, 1600, 1400, 1100, 1000, 820,  90 },// 90 %
		{   200, 2100, 1630, 1600, 1400, 1100, 1000, 850, 120 },// 92 %
		{   200, 2100, 1610, 1600, 1400, 1100, 1000, 850, 140 },// 94 %
		{   200, 2000, 1700, 1600, 1400, 1100, 1000, 820, 180 },// 96 %
		{   200, 2000, 1700, 1580, 1400, 1100, 1000, 820, 200 },// 98 %
		{   200, 2000, 1680, 1580, 1400, 1100, 1000, 820, 220 },//100 %
		{   200, 2000, 1680, 1560, 1400, 1100, 1000, 820, 240 },//102 %
		{   200, 2000, 1660, 1540, 1400, 1100, 1000, 820, 280 },//104 %
		{   200, 2000, 1640, 1540, 1400, 1100, 1000, 820, 300 },//106 %
		{   200, 2000, 1620, 1540, 1400, 1100, 1000, 820, 320 },//108 %
		{   200, 2000, 1600, 1540, 1400, 1100, 1000, 820, 340 },//110 %
	},
	//Game Level Middle
	{
		{   200, 2230, 1945, 1800, 1800, 1200,  400, 420,   5 },// 75 %
		{   200, 2235, 2240, 1300, 1900, 1500,  500, 120,   5 },// 78 %
		{   200, 2235, 2040, 1300, 1800, 1400,  700, 320,   5 },// 81 %
		{   200, 2135, 1640, 1700, 1800, 1500,  700, 320,   5 },// 84 %
		{   200, 1935, 1540, 1700, 1800, 1800,  700, 320,   5,},// 87 %
		{   200, 1635, 1440, 1900, 1900, 1900,  700, 320,   5 },// 90 %
		{   200, 1225, 1240, 2100, 2100, 2100,  700, 320,  15 },// 93 %
		{   200, 1225, 1140, 2000, 2100, 2300,  700, 320,  15 },// 96 %
		{   200,  915,  800, 2200, 2350, 2500,  700, 320,  15 },// 99 %
		{   200,  800,  800, 2300, 2360, 2500,  700, 320,  20 },//102 %
		{   200,  670,  680, 2300, 2600, 2500,  700, 320,  30 },//105 %
		{   200,  500,  500, 2600, 2550, 2600,  700, 320,  30 },//108 %
		{   200,  250,  300, 2700, 2800, 2700,  700, 320,  30 },//111 %
		{   200,  200,  300, 2700, 2800, 2700,  700, 330,  70 },//114 %
		{   200,  200,  210, 2700, 2700, 2600,  800, 500,  90 },//117 %
	},
	//Game Level Big
	{
		{   200, 2330, 2145, 1800, 1800, 1100,  200, 420,   5 },// 72 %
		{   200, 2435, 1940, 1600, 1700, 1100,  500, 520,   5 },// 75 %
		{   200, 2035, 1940, 1600, 1700, 1100,  800, 620,   5 },// 80 %
		{   200, 1830, 1640, 1600, 1700, 1100, 1100, 820,  10 },// 84 %
		{   200, 1650, 1640, 1600, 1700, 1100, 1100,1000,  10 },// 88 %
		{   200, 1550, 1500, 1600, 1700, 1100, 1100,1230,  20 },// 92 %
		{   200, 1300, 1400, 1600, 1700, 1100, 1300,1380,  20 },// 96 %
		{   200, 1280, 1200, 1600, 1700, 1100, 1400,1500,  20 },//100 %
		{   200, 1170, 1200, 1600, 1700, 1100, 1500,1500,  30 },//104 %
		{   200, 1070, 1200, 1600, 1700, 1100, 1600,1500,  30 },//108 %
		{   200, 1070, 1000, 1600, 1700, 1100, 1600,1700,  30 },//112 %
		{   200, 1060,  800, 1600, 1700, 1100, 1800,1700,  40 },//117 %
		{   200,  900,  800, 1600, 1700, 1100, 1800,1820,  80 },//123 %
		{   200,  800,  700, 1600, 1700, 1100, 1900,1920,  80 },//128 %
		{   200,  800,  600, 1600, 1700, 1100, 1900,2000, 100 },//133 %
	}
};

unsigned int MainGameSlot5ProbabilityMatrix[3][15][9] = {
	//Game Level Small
	{
		{  1240, 1800, 1650, 1455, 1200, 1000, 1000, 650,   5 },// 82 %
		{  1040, 1800, 1650, 1450, 1200, 1000, 1000, 850,  10 },// 84 %
		{  1000, 1800, 1650, 1450, 1200, 1000, 1000, 850,  50 },// 86 %
		{  1000, 1800, 1620, 1450, 1200, 1000, 1000, 850,  80 },// 88 %
		{  1000, 1800, 1600, 1450, 1200, 1000, 1000, 850, 100 },// 90 %
		{  1000, 1800, 1580, 1450, 1200, 1000, 1000, 850, 120 },// 92 %
		{  1000, 1800, 1560, 1450, 1200, 1000, 1000, 850, 140 },// 94 %
		{  1000, 1800, 1600, 1400, 1200, 1000, 1000, 850, 150 },// 96 %
		{  1000, 1780, 1600, 1400, 1200, 1000, 1000, 850, 170 },// 98 %
		{  1000, 1780, 1570, 1400, 1200, 1000, 1000, 850, 200 },//100 %
		{  1000, 1760, 1570, 1400, 1200, 1000, 1000, 850, 220 },//102 %
		{  1000, 1740, 1570, 1400, 1200, 1000, 1000, 850, 240 },//104 %
		{  1000, 1720, 1570, 1400, 1200, 1000, 1000, 850, 260 },//106 %
		{  1000, 1720, 1540, 1400, 1200, 1000, 1000, 850, 290 },//108 %
		{  1000, 1700, 1540, 1400, 1200, 1000, 1000, 850, 310 },//110 %
	},
	//Game Level Middle
	{
		{  1790, 2000, 1600, 1455, 1200, 1200,  350, 400,   5 },// 75 %
		{  1240, 1900, 1950, 1255, 1200, 1200,  800, 450,   5 },// 78 %
		{  1240, 1800, 1750, 1255, 1100, 1200, 1000, 650,   5 },// 81 %
		{  1240, 1400, 1400, 1455, 1350, 1500, 1000, 650,   5 },// 84 %
		{  1000, 1100, 1095, 1700, 1750, 1700, 1000, 650,   5 },// 87 %
		{   890,  800,  900, 1900, 1950, 1900, 1000, 650,  10 },// 90 %
		{   830,  800,  850, 1950, 1950, 1950, 1000, 650,  20 },// 93 %
		{   730,  700,  700, 1950, 2150, 2100, 1000, 650,  20 },// 96 %
		{   600,  600,  580, 2150, 2200, 2200, 1000, 650,  20 },// 99 %
		{   500,  500,  500, 2180, 2230, 2400, 1000, 650,  40 },//102 %
		{   400,  400,  500, 2180, 2330, 2500, 1000, 650,  40 },//105 %
		{   350,  350,  400, 2280, 2380, 2550, 1000, 650,  40 },//108 %
		{   250,  300,  300, 2480, 2380, 2600, 1000, 650,  40 },//111 %
		{   210,  270,  300, 2480, 2400, 2600, 1000, 660,  80 },//114 %
		{   210,  200,  300, 2500, 2400, 2600, 1000, 700,  90 },//117 %
	},
	//Game Level Big
	{
		{  2090, 2000, 1800, 1455, 1200,  800,  350, 300,   5 },// 72 %
		{  1240, 2100, 2100, 1455, 1250, 1000,  400, 450,   5 },// 75 %
		{  1240, 2000, 1650, 1455, 1200, 1000,  800, 650,   5 },// 80 %
		{  1240, 1700, 1600, 1455, 1200, 1000, 1000, 800,   5 },// 84 %
		{  1240, 1300, 1600, 1455, 1200, 1000, 1100,1100,   5 },// 88 %
		{  1235, 1300, 1300, 1455, 1200, 1000, 1200,1300,  10 },// 92 %
		{  1235, 1150, 1300, 1455, 1200, 1000, 1300,1350,  10 },// 96 %
		{  1135, 1150, 1200, 1455, 1200, 1000, 1400,1450,  10 },//100 %
		{  1100, 1100, 1100, 1455, 1200, 1000, 1475,1550,  20 },//104 %
		{  1000, 1100, 1000, 1455, 1200, 1000, 1575,1650,  20 },//108 %
		{  1000,  950,  900, 1460, 1200, 1000, 1770,1700,  20 },//112 %
		{  1000,  900,  700, 1450, 1200, 1000, 1800,1900,  50 },//117 %
		{  1000,  800,  700, 1420, 1200, 1000, 1900,1900,  80 },//123 %
		{  1000,  700,  600, 1420, 1200, 1000, 2000,2000,  80 },//128 %
		{   900,  600,  600, 1400, 1200, 1000, 2100,2100, 100 },//133 %
	}

};

unsigned int MainGameSlot7ProbabilityMatrix[3][15][9] = {
	//Game Level Small
	{
		{   250, 1845, 1750, 1700, 1600, 1100, 1000, 750,   5 },// 82 %
		{   250, 1840, 1750, 1700, 1600, 1000, 1000, 850,  10 },// 84 %
		{   250, 1800, 1750, 1700, 1600, 1000, 1000, 850,  50 },// 86 %
		{   250, 1800, 1720, 1700, 1600, 1000, 1000, 850,  80 },// 88 %
		{   250, 1800, 1715, 1700, 1600, 1000, 1000, 850,  85 },// 90 %
		{   250, 1800, 1700, 1690, 1600, 1000, 1000, 850, 110 },// 92 %
		{   250, 1800, 1670, 1690, 1600, 1000, 1000, 850, 140 },// 94 %
		{   250, 1800, 1620, 1700, 1600, 1000, 1000, 850, 180 },// 96 %
		{   250, 1800, 1600, 1700, 1600, 1000, 1000, 850, 200 },// 98 %
		{   250, 1800, 1580, 1700, 1600, 1000, 1000, 850, 220 },//100 %
		{   250, 1790, 1570, 1700, 1600, 1000, 1000, 850, 240 },//102 %
		{   250, 1770, 1570, 1700, 1600, 1000, 1000, 850, 260 },//104 %
		{   250, 1760, 1560, 1700, 1600, 1000, 1000, 850, 280 },//106 %
		{   250, 1760, 1540, 1700, 1600, 1000, 1000, 850, 300 },//108 %
		{   250, 1760, 1520, 1700, 1600, 1000, 1000, 850, 320 },//110 %
	},
	//Game Level Middle
	{
		{   250, 1945, 1900, 1800, 1800, 1300,  500, 500,   5 },// 75 %
		{   250, 2445, 1950, 1500, 1300, 1500,  500, 550,   5 },// 78 %
		{   250, 1945, 1750, 1500, 1600, 1500,  800, 650,   5 },// 81 %
		{   250, 1645, 1550, 1700, 1600, 1600, 1000, 650,   5 },// 84 %
		{   250, 1545, 1450, 1700, 1700, 1700, 1000, 650,   5 },// 87 %
		{   250, 1245, 1350, 1800, 1800, 1900, 1000, 650,   5 },// 90 %
		{   250, 1140, 1250, 1900, 1900, 1900, 1000, 650,  10 },// 93 %
		{   250,  940,  950, 2000, 2100, 2100, 1000, 650,  10 },// 96 %
		{   250,  940,  850, 2100, 2100, 2100, 1000, 650,  10 },// 99 %
		{   250,  840,  740, 2100, 2200, 2200, 1000, 650,  20 },//102 %
		{   250,  600,  540, 2240, 2300, 2400, 1000, 650,  20 },//105 %
		{   250,  400,  400, 2280, 2500, 2500, 1000, 650,  20 },//108 %
		{   250,  300,  300, 2280, 2600, 2600, 1000, 650,  20 },//111 %
		{   230,  250,  300, 2300, 2600, 2600, 1000, 670,  50 },//114 %
		{   230,  220,  300, 2300, 2500, 2600, 1000, 800,  50 },//117 %
	},
	//Game Level Big
	{
		{   250, 1995, 2150, 1850, 1800, 1300,  300, 350,   5 },// 72 %
		{   250, 2445, 2100, 1700, 1650, 1100,  300, 450,   5 },// 75 %
		{   250, 1840, 1850, 1700, 1600, 1100,  900, 750,  10 },// 80 %
		{   250, 1740, 1700, 1700, 1600, 1100, 1000, 900,  10 },// 84 %
		{   250, 1600, 1600, 1700, 1600, 1100, 1100,1040,  10 },// 88 %
		{   250, 1535, 1500, 1700, 1600, 1100, 1100,1200,  15 },// 92 %
		{   250, 1335, 1400, 1700, 1600, 1100, 1300,1300,  15 },// 96 %
		{   250, 1235, 1300, 1700, 1600, 1100, 1400,1400,  15 },//100 %
		{   250, 1220, 1100, 1700, 1600, 1100, 1500,1500,  30 },//104 %
		{   250, 1020, 1000, 1700, 1600, 1100, 1600,1700,  30 },//108 %
		{   250, 1000,  950, 1700, 1600, 1100, 1650,1720,  30 },//112 %
		{   250,  900,  950, 1700, 1600, 1100, 1750,1700,  50 },//117 %
		{   250,  870,  800, 1700, 1600, 1100, 1800,1800,  80 },//123 %
		{   250,  920,  500, 1700, 1600, 1100, 1900,1950,  80 },//128 %
		{   250,  900,  450, 1700, 1600, 1100, 1900,2000, 100 },//133 %
	}

};

unsigned int MaingameProM[3][15][7] = {
   /***GL SMALL ***/
   {{64,13,10,13,0,0,0},// 82%
	{60,14,13,13,0,0,0},// 84%
	{59,15,17, 8,1,0,0},// 86%
	{56,16,17,10,0,1,0},// 88%
	{73, 0,10,10,5,0,2},// 90%
	{60,13,14,11,0,1,1},// 92%
	{56,12,12,15,4,1,0},// 94%
	{63, 5,12, 3,3,5,2},// 96%
	{58,10,10,17,2,2,1},// 98%
	{60,13, 0,10,7,6,1},//100%
	{55,11,14,12,4,3,1},//102%
	{52,10,24, 2,7,4,1},//104%
	{45,16,19, 9,6,4,1},//106%
	{47,13,14,15,5,5,1},//108%
	{50,14,14,10,5,5,2} //110%
	},

	/***GL MID ***/
   {{76, 0,12,12,0,0,0},// 70%
	{68,20, 8, 3,1,0,0},// 75%
	{66,15, 7,10,1,1,0},// 80%
	{59,11,16,13,0,1,0},// 85%
	{73, 0,10,10,5,0,2},// 90%
	{60,13,15, 0,7,5,0},// 92%
	{66,10, 0,18,3,2,1},// 94%
	{63, 5,12, 3,3,3,2},// 96%
	{65, 0,15, 9,5,5,1},// 98%
	{60,13, 0,10,7,6,1},//100%
	{58,10,12, 7,6,6,1},//103%
	{57, 5,13,14,5,4,2},//107%
	{52, 8, 8,15,8,8,1},//110%
	{50,10, 8,16,9,5,2},//115%
	{45,11,11,13,9,9,2} //125%
	},

	/***GL BIG ***/
   {{76, 8,10, 8,0,0,0},// 72%
	{68,20, 8, 3,1,0,0},// 75%
	{70,13, 8, 8,0,1,0},// 78%
	{64,14,10,10,1,1,0},// 81%
	{74, 8, 0,15,1,1,1},// 84%
	{64,10,10,12,2,2,0},// 87%
	{73, 0,10,10,5,0,2},// 90%
	{66, 8, 8, 9,4,4,1},// 93%
	{63, 5,12, 3,3,5,2},// 96%
	{63, 6, 6,15,4,5,1},//100%
	{55, 0,14,15,1,5,2},//105%
	{52,10, 9,14,8,6,1},//110%
	{45,12,16,10,9,7,1},//115%
	{47,10,11,16,8,6,2},//122%
	{39,11,16,16,8,7,3} //132%
	}
 };/**< Main game probability mapping table */


unsigned int MainGameSlot1ProbabilityDownMatrix[5][9] = {
	{  200, 2330, 2145, 1800, 1800, 1100,  200,  420,  5 },// 72 %
	{  200, 2330, 1945, 1800, 1800, 1100,  400,  420,  5 },// 74 %
	{  200, 2330, 1845, 1800, 1700, 1100,  500,  520,  5 },// 76 %
	{  200, 2330, 1740, 1800, 1700, 1100,  600,  520, 10 },// 78 %
	{  200, 2035, 1740, 1800, 1700, 1100,  900,  520,  5 },// 80 %
};

unsigned int MainGameSlot5ProbabilityDownMatrix[5][9] = {
	{ 2090, 2000, 1800, 1455, 1200,  800,  350,  300,  5 },// 72 %
	{ 1790, 2000, 1800, 1455, 1200, 1000,  350,  400,  5 },// 74 %
	{ 1690, 1800, 1800, 1455, 1200, 1000,  550,  500,  5 },// 76 %
	{ 1640, 1800, 1650, 1455, 1200, 1000,  600,  650,  5 },// 78 %
	{ 1440, 1800, 1650, 1455, 1200, 1000,  800,  650,  5 },// 80 %
};

unsigned int MainGameSlot7ProbabilityDownMatrix[5][9] = {
	{  250, 1995, 2150, 1850, 1800, 1300,  300,  350,  5 },// 72 %
	{  250, 1945, 1900, 1800, 1800, 1300,  500,  500,  5 },// 74 %
	{  250, 1945, 1800, 1800, 1800, 1300,  550,  550,  5 },// 76 %
	{  250, 1743, 1700, 1700, 1800, 1300,  650,  850,  7 },// 78 %
	{  250, 1845, 1750, 1700, 1600, 1300,  800,  750,  5 },// 80 %
};

unsigned int MainGameSlot1ProbabilityUpMatrix[5][9] = {
	{  200, 2000, 1620, 1590, 1400, 1100, 1000,  820,270 },//105 %
	{  300, 2000, 1600, 1540, 1400, 1100, 1000,  820,240 },//110 %
	{  300, 2000, 1600, 1530, 1400, 1100, 1000,  820,250 },//115 %
	{  350, 1900, 1570, 1500, 1400, 1100, 1000,  800,380 },//120 %
	{  350, 1900, 1490, 1500, 1400, 1100, 1000,  800,460 },//125 %
};

unsigned int MainGameSlot5ProbabilityUpMatrix[5][9] = {
	{ 1000, 1720, 1570, 1400, 1200, 1000, 1000,  850,260 },//105 %
	{ 1000, 1700, 1500, 1400, 1200, 1000, 1000,  850,350 },//110 %
	{ 1000, 1600, 1500, 1400, 1200, 1000, 1000,  800,500 },//115 %
	{ 1020, 1600, 1600, 1400, 1200, 1000, 1000,  800,380 },//120 %
	{ 1040, 1600, 1500, 1400, 1200, 1000, 1000,  800,460 },//125 %
};

unsigned int MainGameSlot7ProbabilityUpMatrix[5][9] = {
	{  250, 1760, 1560, 1700, 1600, 1000, 1000,  850,280 },//105 %
	{  250, 1730, 1520, 1700, 1600, 1000, 1000,  800,400 },//110 %
	{  250, 1650, 1600, 1700, 1600, 1000, 1000,  800,400 },//115 %
	{  250, 1650, 1500, 1700, 1600, 1000, 1000,  800,500 },//120 %
	{  250, 1650, 1500, 1700, 1600, 1000, 1000,  800,500 },//125 %
};

unsigned int MaingameProDownM[5][7] = {
	{68,25, 6, 1, 0, 0, 0},//76%
	{67,17,15, 0, 1, 0, 0},//79%
	{67,16,12, 4, 0, 1, 0},//82%
	{66,12,10,10, 1, 1, 0},//85%
	{68,10,10,10, 0, 1, 1},//88%
};/**< Main game pull down probability mapping table */

unsigned int MaingameProUpM[5][7]  = {
	{55,10,10,12, 6, 6, 1},//105%
	{48,12,11,15, 7, 6, 1},//110%
	{48,10,15,10, 8, 8, 1},//115%
	{44,12,14,15, 7, 6, 2},//120%
	{48,11,11,10, 9, 9, 2},//125%
};/**< Main game pull up probability mapping table */


unsigned long MainGameLevelMatrix[3][26][15] = {
	//Game Level Small
	{
			// 89 %
			{
				GL_SMALL_89__82, GL_SMALL_89__84, GL_SMALL_89__86, GL_SMALL_89__88, GL_SMALL_89__90,
				GL_SMALL_89__92, GL_SMALL_89__94, GL_SMALL_89__96, GL_SMALL_89__98, GL_SMALL_89__100,
				GL_SMALL_89__102,GL_SMALL_89__104,GL_SMALL_89__106,GL_SMALL_89__108,GL_SMALL_89__110
			},
			// 89.5 %
			{
				GL_SMALL_89_5__82, GL_SMALL_89_5__84, GL_SMALL_89_5__86, GL_SMALL_89_5__88, GL_SMALL_89_5__90,
				GL_SMALL_89_5__92, GL_SMALL_89_5__94, GL_SMALL_89_5__96, GL_SMALL_89_5__98, GL_SMALL_89_5__100,
				GL_SMALL_89_5__102,GL_SMALL_89_5__104,GL_SMALL_89_5__106,GL_SMALL_89_5__108,GL_SMALL_89_5__110
			},
			// 90 %
			{
				GL_SMALL_90__82, GL_SMALL_90__84, GL_SMALL_90__86, GL_SMALL_90__88, GL_SMALL_90__90,
				GL_SMALL_90__92, GL_SMALL_90__94, GL_SMALL_90__96, GL_SMALL_90__98, GL_SMALL_90__100,
				GL_SMALL_90__102,GL_SMALL_90__104,GL_SMALL_90__106,GL_SMALL_90__108,GL_SMALL_90__110
			},
			// 90.5 %
			{
				GL_SMALL_90_5__82, GL_SMALL_90_5__84, GL_SMALL_90_5__86, GL_SMALL_90_5__88, GL_SMALL_90_5__90,
				GL_SMALL_90_5__92, GL_SMALL_90_5__94, GL_SMALL_90_5__96, GL_SMALL_90_5__98, GL_SMALL_90_5__100,
				GL_SMALL_90_5__102,GL_SMALL_90_5__104,GL_SMALL_90_5__106,GL_SMALL_90_5__108,GL_SMALL_90_5__110
			},
		    // 91 %
			{
				GL_SMALL_91__82, GL_SMALL_91__84, GL_SMALL_91__86, GL_SMALL_91__88, GL_SMALL_91__90,
				GL_SMALL_91__92, GL_SMALL_91__94, GL_SMALL_91__96, GL_SMALL_91__98, GL_SMALL_91__100,
				GL_SMALL_91__102,GL_SMALL_91__104,GL_SMALL_91__106,GL_SMALL_91__108,GL_SMALL_91__110
			},
		    // 91.5 %
			{
				GL_SMALL_91_5__82, GL_SMALL_91_5__84, GL_SMALL_91_5__86, GL_SMALL_91_5__88, GL_SMALL_91_5__90,
				GL_SMALL_91_5__92, GL_SMALL_91_5__94, GL_SMALL_91_5__96, GL_SMALL_91_5__98, GL_SMALL_91_5__100,
				GL_SMALL_91_5__102,GL_SMALL_91_5__104,GL_SMALL_91_5__106,GL_SMALL_91_5__108,GL_SMALL_91_5__110
			},
		    // 92 %
			{
				GL_SMALL_92__82, GL_SMALL_92__84, GL_SMALL_92__86, GL_SMALL_92__88, GL_SMALL_92__90,
				GL_SMALL_92__92, GL_SMALL_92__94, GL_SMALL_92__96, GL_SMALL_92__98, GL_SMALL_92__100,
				GL_SMALL_92__102,GL_SMALL_92__104,GL_SMALL_92__106,GL_SMALL_92__108,GL_SMALL_92__110
			},
		    // 92.5 %
			{
				GL_SMALL_92_5__82, GL_SMALL_92_5__84, GL_SMALL_92_5__86, GL_SMALL_92_5__88, GL_SMALL_92_5__90,
				GL_SMALL_92_5__92, GL_SMALL_92_5__94, GL_SMALL_92_5__96, GL_SMALL_92_5__98, GL_SMALL_92_5__100,
				GL_SMALL_92_5__102,GL_SMALL_92_5__104,GL_SMALL_92_5__106,GL_SMALL_92_5__108,GL_SMALL_92_5__110
			},
		    // 93 %
			{
				GL_SMALL_93__82, GL_SMALL_93__84, GL_SMALL_93__86, GL_SMALL_93__88, GL_SMALL_93__90,
				GL_SMALL_93__92, GL_SMALL_93__94, GL_SMALL_93__96, GL_SMALL_93__98, GL_SMALL_93__100,
				GL_SMALL_93__102,GL_SMALL_93__104,GL_SMALL_93__106,GL_SMALL_93__108,GL_SMALL_93__110
			},
		    // 93.5 %
			{
				GL_SMALL_93_5__82, GL_SMALL_93_5__84, GL_SMALL_93_5__86, GL_SMALL_93_5__88, GL_SMALL_93_5__90,
				GL_SMALL_93_5__92, GL_SMALL_93_5__94, GL_SMALL_93_5__96, GL_SMALL_93_5__98, GL_SMALL_93_5__100,
				GL_SMALL_93_5__102,GL_SMALL_93_5__104,GL_SMALL_93_5__106,GL_SMALL_93_5__108,GL_SMALL_93_5__110
			},
		    // 94 %
			{
				GL_SMALL_94__82, GL_SMALL_94__84, GL_SMALL_94__86, GL_SMALL_94__88, GL_SMALL_94__90,
				GL_SMALL_94__92, GL_SMALL_94__94, GL_SMALL_94__96, GL_SMALL_94__98, GL_SMALL_94__100,
				GL_SMALL_94__102,GL_SMALL_94__104,GL_SMALL_94__106,GL_SMALL_94__108,GL_SMALL_94__110
			},
		    // 94.5 %
			{
				GL_SMALL_94_5__82, GL_SMALL_94_5__84, GL_SMALL_94_5__86, GL_SMALL_94_5__88, GL_SMALL_94_5__90,
				GL_SMALL_94_5__92, GL_SMALL_94_5__94, GL_SMALL_94_5__96, GL_SMALL_94_5__98, GL_SMALL_94_5__100,
				GL_SMALL_94_5__102,GL_SMALL_94_5__104,GL_SMALL_94_5__106,GL_SMALL_94_5__108,GL_SMALL_94_5__110
			},
		    // 95 %
			{
				GL_SMALL_95__82, GL_SMALL_95__84, GL_SMALL_95__86, GL_SMALL_95__88, GL_SMALL_95__90,
				GL_SMALL_95__92, GL_SMALL_95__94, GL_SMALL_95__96, GL_SMALL_95__98, GL_SMALL_95__100,
				GL_SMALL_95__102,GL_SMALL_95__104,GL_SMALL_95__106,GL_SMALL_95__108,GL_SMALL_95__110
			},
		    // 95.5 %
			{
				GL_SMALL_95_5__82, GL_SMALL_95_5__84, GL_SMALL_95_5__86, GL_SMALL_95_5__88, GL_SMALL_95_5__90,
				GL_SMALL_95_5__92, GL_SMALL_95_5__94, GL_SMALL_95_5__96, GL_SMALL_95_5__98, GL_SMALL_95_5__100,
				GL_SMALL_95_5__102,GL_SMALL_95_5__104,GL_SMALL_95_5__106,GL_SMALL_95_5__108,GL_SMALL_95_5__110
			},
			// 96 %
			{
				GL_SMALL_96__82, GL_SMALL_96__84, GL_SMALL_96__86, GL_SMALL_96__88, GL_SMALL_96__90,
				GL_SMALL_96__92, GL_SMALL_96__94, GL_SMALL_96__96, GL_SMALL_96__98, GL_SMALL_96__100,
				GL_SMALL_96__102,GL_SMALL_96__104,GL_SMALL_96__106,GL_SMALL_96__108,GL_SMALL_96__110
			},

			// 96.5 %
			{
				GL_SMALL_96_5__82, GL_SMALL_96_5__84, GL_SMALL_96_5__86, GL_SMALL_96_5__88, GL_SMALL_96_5__90,
				GL_SMALL_96_5__92, GL_SMALL_96_5__94, GL_SMALL_96_5__96, GL_SMALL_96_5__98, GL_SMALL_96_5__100,
				GL_SMALL_96_5__102,GL_SMALL_96_5__104,GL_SMALL_96_5__106,GL_SMALL_96_5__108,GL_SMALL_96_5__110
			},
			// 97 %
			{
				GL_SMALL_97__82, GL_SMALL_97__84, GL_SMALL_97__86, GL_SMALL_97__88, GL_SMALL_97__90,
				GL_SMALL_97__92, GL_SMALL_97__94, GL_SMALL_97__96, GL_SMALL_97__98, GL_SMALL_97__100,
				GL_SMALL_97__102,GL_SMALL_97__104,GL_SMALL_97__106,GL_SMALL_97__108,GL_SMALL_97__110
			},
			// 97.5 %
			{
				GL_SMALL_97_5__82, GL_SMALL_97_5__84, GL_SMALL_97_5__86, GL_SMALL_97_5__88, GL_SMALL_97_5__90,
				GL_SMALL_97_5__92, GL_SMALL_97_5__94, GL_SMALL_97_5__96, GL_SMALL_97_5__98, GL_SMALL_97_5__100,
				GL_SMALL_97_5__102,GL_SMALL_97_5__104,GL_SMALL_97_5__106,GL_SMALL_97_5__108,GL_SMALL_97_5__110
			},
			// 98 %
			{
				GL_SMALL_98__82, GL_SMALL_98__84, GL_SMALL_98__86, GL_SMALL_98__88, GL_SMALL_98__90,
				GL_SMALL_98__92, GL_SMALL_98__94, GL_SMALL_98__96, GL_SMALL_98__98, GL_SMALL_98__100,
				GL_SMALL_98__102,GL_SMALL_98__104,GL_SMALL_98__106,GL_SMALL_98__108,GL_SMALL_98__110
			},
			// 98.5 %
			{
				GL_SMALL_98_5__82, GL_SMALL_98_5__84, GL_SMALL_98_5__86, GL_SMALL_98_5__88, GL_SMALL_98_5__90,
				GL_SMALL_98_5__92, GL_SMALL_98_5__94, GL_SMALL_98_5__96, GL_SMALL_98_5__98, GL_SMALL_98_5__100,
				GL_SMALL_98_5__102,GL_SMALL_98_5__104,GL_SMALL_98_5__106,GL_SMALL_98_5__108,GL_SMALL_98_5__110
			},
			// 99 %
			{
				GL_SMALL_99__82, GL_SMALL_99__84, GL_SMALL_99__86, GL_SMALL_99__88, GL_SMALL_99__90,
				GL_SMALL_99__92, GL_SMALL_99__94, GL_SMALL_99__96, GL_SMALL_99__98, GL_SMALL_99__100,
				GL_SMALL_99__102,GL_SMALL_99__104,GL_SMALL_99__106,GL_SMALL_99__108,GL_SMALL_99__110
			},
			// 99.5 %
			{
				GL_SMALL_99_5__82, GL_SMALL_99_5__84, GL_SMALL_99_5__86, GL_SMALL_99_5__88, GL_SMALL_99_5__90,
				GL_SMALL_99_5__92, GL_SMALL_99_5__94, GL_SMALL_99_5__96, GL_SMALL_99_5__98, GL_SMALL_99_5__100,
				GL_SMALL_99_5__102,GL_SMALL_99_5__104,GL_SMALL_99_5__106,GL_SMALL_99_5__108,GL_SMALL_99_5__110
			},
			// 100 %
			{
				GL_SMALL_100__82, GL_SMALL_100__84, GL_SMALL_100__86, GL_SMALL_100__88, GL_SMALL_100__90,
				GL_SMALL_100__92, GL_SMALL_100__94, GL_SMALL_100__96, GL_SMALL_100__98, GL_SMALL_100__100,
				GL_SMALL_100__102,GL_SMALL_100__104,GL_SMALL_100__106,GL_SMALL_100__108,GL_SMALL_100__110
			},
			// 101 %
			{
				GL_SMALL_101__82, GL_SMALL_101__84, GL_SMALL_101__86, GL_SMALL_101__88, GL_SMALL_101__90,
				GL_SMALL_101__92, GL_SMALL_101__94, GL_SMALL_101__96, GL_SMALL_101__98, GL_SMALL_101__100,
				GL_SMALL_101__102,GL_SMALL_101__104,GL_SMALL_101__106,GL_SMALL_101__108,GL_SMALL_101__110
			},
			// 102 %
			{
				GL_SMALL_102__82, GL_SMALL_102__84, GL_SMALL_102__86, GL_SMALL_102__88, GL_SMALL_102__90,
				GL_SMALL_102__92, GL_SMALL_102__94, GL_SMALL_102__96, GL_SMALL_102__98, GL_SMALL_102__100,
				GL_SMALL_102__102,GL_SMALL_102__104,GL_SMALL_102__106,GL_SMALL_102__108,GL_SMALL_102__110
			},
			// 104 %
			{
				GL_SMALL_104__82, GL_SMALL_104__84, GL_SMALL_104__86, GL_SMALL_104__88, GL_SMALL_104__90,
				GL_SMALL_104__92, GL_SMALL_104__94, GL_SMALL_104__96, GL_SMALL_104__98, GL_SMALL_104__100,
				GL_SMALL_104__102,GL_SMALL_104__104,GL_SMALL_104__106,GL_SMALL_104__108,GL_SMALL_104__110
			}
	},
	//Game Level Middle
	{
			// 89 %
			{
				GL_MIDDLE_89__75, GL_MIDDLE_89__78, GL_MIDDLE_89__81, GL_MIDDLE_89__84, GL_MIDDLE_89__87,
				GL_MIDDLE_89__90, GL_MIDDLE_89__93, GL_MIDDLE_89__96, GL_MIDDLE_89__99, GL_MIDDLE_89__102,
				GL_MIDDLE_89__105,GL_MIDDLE_89__108,GL_MIDDLE_89__111,GL_MIDDLE_89__114,GL_MIDDLE_89__117,
			},
			// 89.5 %
			{
				GL_MIDDLE_89_5__75, GL_MIDDLE_89_5__78, GL_MIDDLE_89_5__81, GL_MIDDLE_89_5__84, GL_MIDDLE_89_5__87,
				GL_MIDDLE_89_5__90, GL_MIDDLE_89_5__93, GL_MIDDLE_89_5__96, GL_MIDDLE_89_5__99, GL_MIDDLE_89_5__102,
				GL_MIDDLE_89_5__105,GL_MIDDLE_89_5__108,GL_MIDDLE_89_5__111,GL_MIDDLE_89_5__114,GL_MIDDLE_89_5__117,
			},
			// 90 %
			{
				GL_MIDDLE_90__75, GL_MIDDLE_90__78, GL_MIDDLE_90__81, GL_MIDDLE_90__84, GL_MIDDLE_90__87,
				GL_MIDDLE_90__90, GL_MIDDLE_90__93, GL_MIDDLE_90__96, GL_MIDDLE_90__99, GL_MIDDLE_90__102,
				GL_MIDDLE_90__105,GL_MIDDLE_90__108,GL_MIDDLE_90__111,GL_MIDDLE_90__114,GL_MIDDLE_90__117,
			},
			// 90.5 %
			{
				GL_MIDDLE_90_5__75, GL_MIDDLE_90_5__78, GL_MIDDLE_90_5__81, GL_MIDDLE_90_5__84, GL_MIDDLE_90_5__87,
				GL_MIDDLE_90_5__90, GL_MIDDLE_90_5__93, GL_MIDDLE_90_5__96, GL_MIDDLE_90_5__99, GL_MIDDLE_90_5__102,
				GL_MIDDLE_90_5__105,GL_MIDDLE_90_5__108,GL_MIDDLE_90_5__111,GL_MIDDLE_90_5__114,GL_MIDDLE_90_5__117,
			},
			// 91 %
			{
				GL_MIDDLE_91__75, GL_MIDDLE_91__78, GL_MIDDLE_91__81, GL_MIDDLE_91__84, GL_MIDDLE_91__87,
				GL_MIDDLE_91__90, GL_MIDDLE_91__93, GL_MIDDLE_91__96, GL_MIDDLE_91__99, GL_MIDDLE_91__102,
				GL_MIDDLE_91__105,GL_MIDDLE_91__108,GL_MIDDLE_91__111,GL_MIDDLE_91__114,GL_MIDDLE_91__117,
			},
			// 91.5 %
			{
				GL_MIDDLE_91_5__75, GL_MIDDLE_91_5__78, GL_MIDDLE_91_5__81, GL_MIDDLE_91_5__84, GL_MIDDLE_91_5__87,
				GL_MIDDLE_91_5__90, GL_MIDDLE_91_5__93, GL_MIDDLE_91_5__96, GL_MIDDLE_91_5__99, GL_MIDDLE_91_5__102,
				GL_MIDDLE_91_5__105,GL_MIDDLE_91_5__108,GL_MIDDLE_91_5__111,GL_MIDDLE_91_5__114,GL_MIDDLE_91_5__117,
			},
			// 92 %
			{
				GL_MIDDLE_92__75, GL_MIDDLE_92__78, GL_MIDDLE_92__81, GL_MIDDLE_92__84, GL_MIDDLE_92__87,
				GL_MIDDLE_92__90, GL_MIDDLE_92__93, GL_MIDDLE_92__96, GL_MIDDLE_92__99, GL_MIDDLE_92__102,
				GL_MIDDLE_92__105,GL_MIDDLE_92__108,GL_MIDDLE_92__111,GL_MIDDLE_92__114,GL_MIDDLE_92__117,
			},
			// 92.5 %
			{
				GL_MIDDLE_92_5__75, GL_MIDDLE_92_5__78, GL_MIDDLE_92_5__81, GL_MIDDLE_92_5__84, GL_MIDDLE_92_5__87,
				GL_MIDDLE_92_5__90, GL_MIDDLE_92_5__93, GL_MIDDLE_92_5__96, GL_MIDDLE_92_5__99, GL_MIDDLE_92_5__102,
				GL_MIDDLE_92_5__105,GL_MIDDLE_92_5__108,GL_MIDDLE_92_5__111,GL_MIDDLE_92_5__114,GL_MIDDLE_92_5__117,
			},
			// 93 %
			{
				GL_MIDDLE_93__75, GL_MIDDLE_93__78, GL_MIDDLE_93__81, GL_MIDDLE_93__84, GL_MIDDLE_93__87,
				GL_MIDDLE_93__90, GL_MIDDLE_93__93, GL_MIDDLE_93__96, GL_MIDDLE_93__99, GL_MIDDLE_93__102,
				GL_MIDDLE_93__105,GL_MIDDLE_93__108,GL_MIDDLE_93__111,GL_MIDDLE_93__114,GL_MIDDLE_93__117,
			},
			// 93.5 %
			{
				GL_MIDDLE_93_5__75, GL_MIDDLE_93_5__78, GL_MIDDLE_93_5__81, GL_MIDDLE_93_5__84, GL_MIDDLE_93_5__87,
				GL_MIDDLE_93_5__90, GL_MIDDLE_93_5__93, GL_MIDDLE_93_5__96, GL_MIDDLE_93_5__99, GL_MIDDLE_93_5__102,
				GL_MIDDLE_93_5__105,GL_MIDDLE_93_5__108,GL_MIDDLE_93_5__111,GL_MIDDLE_93_5__114,GL_MIDDLE_93_5__117,
			},
			// 94 %
			{
				GL_MIDDLE_94__75, GL_MIDDLE_94__78, GL_MIDDLE_94__81, GL_MIDDLE_94__84, GL_MIDDLE_94__87,
				GL_MIDDLE_94__90, GL_MIDDLE_94__93, GL_MIDDLE_94__96, GL_MIDDLE_94__99, GL_MIDDLE_94__102,
				GL_MIDDLE_94__105,GL_MIDDLE_94__108,GL_MIDDLE_94__111,GL_MIDDLE_94__114,GL_MIDDLE_94__117,
			},
			// 94.5 %
			{
				GL_MIDDLE_94_5__75, GL_MIDDLE_94_5__78, GL_MIDDLE_94_5__81, GL_MIDDLE_94_5__84, GL_MIDDLE_94_5__87,
				GL_MIDDLE_94_5__90, GL_MIDDLE_94_5__93, GL_MIDDLE_94_5__96, GL_MIDDLE_94_5__99, GL_MIDDLE_94_5__102,
				GL_MIDDLE_94_5__105,GL_MIDDLE_94_5__108,GL_MIDDLE_94_5__111,GL_MIDDLE_94_5__114,GL_MIDDLE_94_5__117,
			},
			// 95 %
			{
				GL_MIDDLE_95__75, GL_MIDDLE_95__78, GL_MIDDLE_95__81, GL_MIDDLE_95__84, GL_MIDDLE_95__87,
				GL_MIDDLE_95__90, GL_MIDDLE_95__93, GL_MIDDLE_95__96, GL_MIDDLE_95__99, GL_MIDDLE_95__102,
				GL_MIDDLE_95__105,GL_MIDDLE_95__108,GL_MIDDLE_95__111,GL_MIDDLE_95__114,GL_MIDDLE_95__117,
			},
			// 95.5 %
			{
				GL_MIDDLE_95_5__75, GL_MIDDLE_95_5__78, GL_MIDDLE_95_5__81, GL_MIDDLE_95_5__84, GL_MIDDLE_95_5__87,
				GL_MIDDLE_95_5__90, GL_MIDDLE_95_5__93, GL_MIDDLE_95_5__96, GL_MIDDLE_95_5__99, GL_MIDDLE_95_5__102,
				GL_MIDDLE_95_5__105,GL_MIDDLE_95_5__108,GL_MIDDLE_95_5__111,GL_MIDDLE_95_5__114,GL_MIDDLE_95_5__117,
			},
			// 96 %
			{
				GL_MIDDLE_96__75, GL_MIDDLE_96__78, GL_MIDDLE_96__81, GL_MIDDLE_96__84, GL_MIDDLE_96__87,
				GL_MIDDLE_96__90, GL_MIDDLE_96__93, GL_MIDDLE_96__96, GL_MIDDLE_96__99, GL_MIDDLE_96__102,
				GL_MIDDLE_96__105,GL_MIDDLE_96__108,GL_MIDDLE_96__111,GL_MIDDLE_96__114,GL_MIDDLE_96__117,
			},
			// 96.5 %
			{
				GL_MIDDLE_96_5__75, GL_MIDDLE_96_5__78, GL_MIDDLE_96_5__81, GL_MIDDLE_96_5__84, GL_MIDDLE_96_5__87,
				GL_MIDDLE_96_5__90, GL_MIDDLE_96_5__93, GL_MIDDLE_96_5__96, GL_MIDDLE_96_5__99, GL_MIDDLE_96_5__102,
				GL_MIDDLE_96_5__105,GL_MIDDLE_96_5__108,GL_MIDDLE_96_5__111,GL_MIDDLE_96_5__114,GL_MIDDLE_96_5__117,
			},
			// 97 %
			{
				GL_MIDDLE_97__75, GL_MIDDLE_97__78, GL_MIDDLE_97__81, GL_MIDDLE_97__84, GL_MIDDLE_97__87,
				GL_MIDDLE_97__90, GL_MIDDLE_97__93, GL_MIDDLE_97__96, GL_MIDDLE_97__99, GL_MIDDLE_97__102,
				GL_MIDDLE_97__105,GL_MIDDLE_97__108,GL_MIDDLE_97__111,GL_MIDDLE_97__114,GL_MIDDLE_97__117,
			},
			// 97.5 %
			{
				GL_MIDDLE_97_5__75, GL_MIDDLE_97_5__78, GL_MIDDLE_97_5__81, GL_MIDDLE_97_5__84, GL_MIDDLE_97_5__87,
				GL_MIDDLE_97_5__90, GL_MIDDLE_97_5__93, GL_MIDDLE_97_5__96, GL_MIDDLE_97_5__99, GL_MIDDLE_97_5__102,
				GL_MIDDLE_97_5__105,GL_MIDDLE_97_5__108,GL_MIDDLE_97_5__111,GL_MIDDLE_97_5__114,GL_MIDDLE_97_5__117,
			},
			// 98 %
			{
				GL_MIDDLE_98__75, GL_MIDDLE_98__78, GL_MIDDLE_98__81, GL_MIDDLE_98__84, GL_MIDDLE_98__87,
				GL_MIDDLE_98__90, GL_MIDDLE_98__93, GL_MIDDLE_98__96, GL_MIDDLE_98__99, GL_MIDDLE_98__102,
				GL_MIDDLE_98__105,GL_MIDDLE_98__108,GL_MIDDLE_98__111,GL_MIDDLE_98__114,GL_MIDDLE_98__117,
			},
			// 98.5 %
			{
				GL_MIDDLE_98_5__75, GL_MIDDLE_98_5__78, GL_MIDDLE_98_5__81, GL_MIDDLE_98_5__84, GL_MIDDLE_98_5__87,
				GL_MIDDLE_98_5__90, GL_MIDDLE_98_5__93, GL_MIDDLE_98_5__96, GL_MIDDLE_98_5__99, GL_MIDDLE_98_5__102,
				GL_MIDDLE_98_5__105,GL_MIDDLE_98_5__108,GL_MIDDLE_98_5__111,GL_MIDDLE_98_5__114,GL_MIDDLE_98_5__117,
			},
			// 99 %
			{
				GL_MIDDLE_99__75, GL_MIDDLE_99__78, GL_MIDDLE_99__81, GL_MIDDLE_99__84, GL_MIDDLE_99__87,
				GL_MIDDLE_99__90, GL_MIDDLE_99__93, GL_MIDDLE_99__96, GL_MIDDLE_99__99, GL_MIDDLE_99__102,
				GL_MIDDLE_99__105,GL_MIDDLE_99__108,GL_MIDDLE_99__111,GL_MIDDLE_99__114,GL_MIDDLE_99__117,
			},
			// 99.5 %
			{
				GL_MIDDLE_99_5__75, GL_MIDDLE_99_5__78, GL_MIDDLE_99_5__81, GL_MIDDLE_99_5__84, GL_MIDDLE_99_5__87,
				GL_MIDDLE_99_5__90, GL_MIDDLE_99_5__93, GL_MIDDLE_99_5__96, GL_MIDDLE_99_5__99, GL_MIDDLE_99_5__102,
				GL_MIDDLE_99_5__105,GL_MIDDLE_99_5__108,GL_MIDDLE_99_5__111,GL_MIDDLE_99_5__114,GL_MIDDLE_99_5__117,
			},
			// 100 %
			{
				GL_MIDDLE_100__75, GL_MIDDLE_100__78, GL_MIDDLE_100__81, GL_MIDDLE_100__84, GL_MIDDLE_100__87,
				GL_MIDDLE_100__90, GL_MIDDLE_100__93, GL_MIDDLE_100__96, GL_MIDDLE_100__99, GL_MIDDLE_100__102,
				GL_MIDDLE_100__105,GL_MIDDLE_100__108,GL_MIDDLE_100__111,GL_MIDDLE_100__114,GL_MIDDLE_100__117,
			},
			// 101 %
			{
				GL_MIDDLE_101__75, GL_MIDDLE_101__78, GL_MIDDLE_101__81, GL_MIDDLE_101__84, GL_MIDDLE_101__87,
				GL_MIDDLE_101__90, GL_MIDDLE_101__93, GL_MIDDLE_101__96, GL_MIDDLE_101__99, GL_MIDDLE_101__102,
				GL_MIDDLE_101__105,GL_MIDDLE_101__108,GL_MIDDLE_101__111,GL_MIDDLE_101__114,GL_MIDDLE_101__117,
			},
			// 102 %
			{
				GL_MIDDLE_102__75, GL_MIDDLE_102__78, GL_MIDDLE_102__81, GL_MIDDLE_102__84, GL_MIDDLE_102__87,
				GL_MIDDLE_102__90, GL_MIDDLE_102__93, GL_MIDDLE_102__96, GL_MIDDLE_102__99, GL_MIDDLE_102__102,
				GL_MIDDLE_102__105,GL_MIDDLE_102__108,GL_MIDDLE_102__111,GL_MIDDLE_102__114,GL_MIDDLE_102__117,
			},
			// 104 %
			{
				GL_MIDDLE_104__75, GL_MIDDLE_104__78, GL_MIDDLE_104__81, GL_MIDDLE_104__84, GL_MIDDLE_104__87,
				GL_MIDDLE_104__90, GL_MIDDLE_104__93, GL_MIDDLE_104__96, GL_MIDDLE_104__99, GL_MIDDLE_104__102,
				GL_MIDDLE_104__105,GL_MIDDLE_104__108,GL_MIDDLE_104__111,GL_MIDDLE_104__114,GL_MIDDLE_104__117,
			}
	},
	//Game Level Big
	{
			// 89 %
			{
				GL_BIG_89__72, GL_BIG_89__75, GL_BIG_89__80, GL_BIG_89__84, GL_BIG_89__88,
				GL_BIG_89__92, GL_BIG_89__96, GL_BIG_89__100,GL_BIG_89__104,GL_BIG_89__108,
				GL_BIG_89__112,GL_BIG_89__117,GL_BIG_89__123,GL_BIG_89__128,GL_BIG_89__133,
			},
			// 89.5 %
			{
				GL_BIG_89_5__72, GL_BIG_89_5__75, GL_BIG_89_5__80, GL_BIG_89_5__84, GL_BIG_89_5__88,
				GL_BIG_89_5__92, GL_BIG_89_5__96, GL_BIG_89_5__100,GL_BIG_89_5__104,GL_BIG_89_5__108,
				GL_BIG_89_5__112,GL_BIG_89_5__117,GL_BIG_89_5__123,GL_BIG_89_5__128,GL_BIG_89_5__133,
			},
			// 90 %
			{
				GL_BIG_90__72, GL_BIG_90__75, GL_BIG_90__80, GL_BIG_90__84, GL_BIG_90__88,
				GL_BIG_90__92, GL_BIG_90__96, GL_BIG_90__100,GL_BIG_90__104,GL_BIG_90__108,
				GL_BIG_90__112,GL_BIG_90__117,GL_BIG_90__123,GL_BIG_90__128,GL_BIG_90__133,
			},
			// 90.5 %
			{
				GL_BIG_90_5__72, GL_BIG_90_5__75, GL_BIG_90_5__80, GL_BIG_90_5__84, GL_BIG_90_5__88,
				GL_BIG_90_5__92, GL_BIG_90_5__96, GL_BIG_90_5__100,GL_BIG_90_5__104,GL_BIG_90_5__108,
				GL_BIG_90_5__112,GL_BIG_90_5__117,GL_BIG_90_5__123,GL_BIG_90_5__128,GL_BIG_90_5__133,
			},
			// 91 %
			{
				GL_BIG_91__72, GL_BIG_91__75, GL_BIG_91__80, GL_BIG_91__84, GL_BIG_91__88,
				GL_BIG_91__92, GL_BIG_91__96, GL_BIG_91__100,GL_BIG_91__104,GL_BIG_91__108,
				GL_BIG_91__112,GL_BIG_91__117,GL_BIG_91__123,GL_BIG_91__128,GL_BIG_91__133,
			},
			// 91.5 %
			{
				GL_BIG_91_5__72, GL_BIG_91_5__75, GL_BIG_91_5__80, GL_BIG_91_5__84, GL_BIG_91_5__88,
				GL_BIG_91_5__92, GL_BIG_91_5__96, GL_BIG_91_5__100,GL_BIG_91_5__104,GL_BIG_91_5__108,
				GL_BIG_91_5__112,GL_BIG_91_5__117,GL_BIG_91_5__123,GL_BIG_91_5__128,GL_BIG_91_5__133,
			},
			// 92 %
			{
				GL_BIG_92__72, GL_BIG_92__75, GL_BIG_92__80, GL_BIG_92__84, GL_BIG_92__88,
				GL_BIG_92__92, GL_BIG_92__96, GL_BIG_92__100,GL_BIG_92__104,GL_BIG_92__108,
				GL_BIG_92__112,GL_BIG_92__117,GL_BIG_92__123,GL_BIG_92__128,GL_BIG_92__133,
			},
			// 92.5 %
			{
				GL_BIG_92_5__72, GL_BIG_92_5__75, GL_BIG_92_5__80, GL_BIG_92_5__84, GL_BIG_92_5__88,
				GL_BIG_92_5__92, GL_BIG_92_5__96, GL_BIG_92_5__100,GL_BIG_92_5__104,GL_BIG_92_5__108,
				GL_BIG_92_5__112,GL_BIG_92_5__117,GL_BIG_92_5__123,GL_BIG_92_5__128,GL_BIG_92_5__133,
			},
			// 93 %
			{
				GL_BIG_93__72, GL_BIG_93__75, GL_BIG_93__80, GL_BIG_93__84, GL_BIG_93__88,
				GL_BIG_93__92, GL_BIG_93__96, GL_BIG_93__100,GL_BIG_93__104,GL_BIG_93__108,
				GL_BIG_93__112,GL_BIG_93__117,GL_BIG_93__123,GL_BIG_93__128,GL_BIG_93__133,
			},
			// 93.5 %
			{
				GL_BIG_93_5__72, GL_BIG_93_5__75, GL_BIG_93_5__80, GL_BIG_93_5__84, GL_BIG_93_5__88,
				GL_BIG_93_5__92, GL_BIG_93_5__96, GL_BIG_93_5__100,GL_BIG_93_5__104,GL_BIG_93_5__108,
				GL_BIG_93_5__112,GL_BIG_93_5__117,GL_BIG_93_5__123,GL_BIG_93_5__128,GL_BIG_93_5__133,
			},
			// 94 %
			{
				GL_BIG_94__72, GL_BIG_94__75, GL_BIG_94__80, GL_BIG_94__84, GL_BIG_94__88,
				GL_BIG_94__92, GL_BIG_94__96, GL_BIG_94__100,GL_BIG_94__104,GL_BIG_94__108,
				GL_BIG_94__112,GL_BIG_94__117,GL_BIG_94__123,GL_BIG_94__128,GL_BIG_94__133,
			},
			// 94.5 %
			{
				GL_BIG_94_5__72, GL_BIG_94_5__75, GL_BIG_94_5__80, GL_BIG_94_5__84, GL_BIG_94_5__88,
				GL_BIG_94_5__92, GL_BIG_94_5__96, GL_BIG_94_5__100,GL_BIG_94_5__104,GL_BIG_94_5__108,
				GL_BIG_94_5__112,GL_BIG_94_5__117,GL_BIG_94_5__123,GL_BIG_94_5__128,GL_BIG_94_5__133,
			},
			// 95 %
			{
				GL_BIG_95__72, GL_BIG_95__75, GL_BIG_95__80, GL_BIG_95__84, GL_BIG_95__88,
				GL_BIG_95__92, GL_BIG_95__96, GL_BIG_95__100,GL_BIG_95__104,GL_BIG_95__108,
				GL_BIG_95__112,GL_BIG_95__117,GL_BIG_95__123,GL_BIG_95__128,GL_BIG_95__133,
			},
			// 95.5 %
			{
				GL_BIG_95_5__72, GL_BIG_95_5__75, GL_BIG_95_5__80, GL_BIG_95_5__84, GL_BIG_95_5__88,
				GL_BIG_95_5__92, GL_BIG_95_5__96, GL_BIG_95_5__100,GL_BIG_95_5__104,GL_BIG_95_5__108,
				GL_BIG_95_5__112,GL_BIG_95_5__117,GL_BIG_95_5__123,GL_BIG_95_5__128,GL_BIG_95_5__133,
			},
			// 96 %
			{
				GL_BIG_96__72, GL_BIG_96__75, GL_BIG_96__80, GL_BIG_96__84, GL_BIG_96__88,
				GL_BIG_96__92, GL_BIG_96__96, GL_BIG_96__100,GL_BIG_96__104,GL_BIG_96__108,
				GL_BIG_96__112,GL_BIG_96__117,GL_BIG_96__123,GL_BIG_96__128,GL_BIG_96__133,
			},
			// 96.5 %
			{
				GL_BIG_96_5__72, GL_BIG_96_5__75, GL_BIG_96_5__80, GL_BIG_96_5__84, GL_BIG_96_5__88,
				GL_BIG_96_5__92, GL_BIG_96_5__96, GL_BIG_96_5__100,GL_BIG_96_5__104,GL_BIG_96_5__108,
				GL_BIG_96_5__112,GL_BIG_96_5__117,GL_BIG_96_5__123,GL_BIG_96_5__128,GL_BIG_96_5__133,
			},
			// 97 %
			{
				GL_BIG_97__72, GL_BIG_97__75, GL_BIG_97__80, GL_BIG_97__84, GL_BIG_97__88,
				GL_BIG_97__92, GL_BIG_97__96, GL_BIG_97__100,GL_BIG_97__104,GL_BIG_97__108,
				GL_BIG_97__112,GL_BIG_97__117,GL_BIG_97__123,GL_BIG_97__128,GL_BIG_97__133,
			},
			// 97.5 %
			{
				GL_BIG_97_5__72, GL_BIG_97_5__75, GL_BIG_97_5__80, GL_BIG_97_5__84, GL_BIG_97_5__88,
				GL_BIG_97_5__92, GL_BIG_97_5__96, GL_BIG_97_5__100,GL_BIG_97_5__104,GL_BIG_97_5__108,
				GL_BIG_97_5__112,GL_BIG_97_5__117,GL_BIG_97_5__123,GL_BIG_97_5__128,GL_BIG_97_5__133,
			},
			// 98 %
			{
				GL_BIG_98__72, GL_BIG_98__75, GL_BIG_98__80, GL_BIG_98__84, GL_BIG_98__88,
				GL_BIG_98__92, GL_BIG_98__96, GL_BIG_98__100,GL_BIG_98__104,GL_BIG_98__108,
				GL_BIG_98__112,GL_BIG_98__117,GL_BIG_98__123,GL_BIG_98__128,GL_BIG_98__133,
			},
			// 98.5 %
			{
				GL_BIG_98_5__72, GL_BIG_98_5__75, GL_BIG_98_5__80, GL_BIG_98_5__84, GL_BIG_98_5__88,
				GL_BIG_98_5__92, GL_BIG_98_5__96, GL_BIG_98_5__100,GL_BIG_98_5__104,GL_BIG_98_5__108,
				GL_BIG_98_5__112,GL_BIG_98_5__117,GL_BIG_98_5__123,GL_BIG_98_5__128,GL_BIG_98_5__133,
			},
			// 99 %
			{
				GL_BIG_99__72, GL_BIG_99__75, GL_BIG_99__80, GL_BIG_99__84, GL_BIG_99__88,
				GL_BIG_99__92, GL_BIG_99__96, GL_BIG_99__100,GL_BIG_99__104,GL_BIG_99__108,
				GL_BIG_99__112,GL_BIG_99__117,GL_BIG_99__123,GL_BIG_99__128,GL_BIG_99__133,
			},
			// 99.5 %
			{
				GL_BIG_99_5__72, GL_BIG_99_5__75, GL_BIG_99_5__80, GL_BIG_99_5__84, GL_BIG_99_5__88,
				GL_BIG_99_5__92, GL_BIG_99_5__96, GL_BIG_99_5__100,GL_BIG_99_5__104,GL_BIG_99_5__108,
				GL_BIG_99_5__112,GL_BIG_99_5__117,GL_BIG_99_5__123,GL_BIG_99_5__128,GL_BIG_99_5__133,
			},
			// 100 %
			{
				GL_BIG_100__72, GL_BIG_100__75, GL_BIG_100__80, GL_BIG_100__84, GL_BIG_100__88,
				GL_BIG_100__92, GL_BIG_100__96, GL_BIG_100__100,GL_BIG_100__104,GL_BIG_100__108,
				GL_BIG_100__112,GL_BIG_100__117,GL_BIG_100__123,GL_BIG_100__128,GL_BIG_100__133,
			},
			// 101 %
			{
				GL_BIG_101__72, GL_BIG_101__75, GL_BIG_101__80, GL_BIG_101__84, GL_BIG_101__88,
				GL_BIG_101__92, GL_BIG_101__96, GL_BIG_101__100,GL_BIG_101__104,GL_BIG_101__108,
				GL_BIG_101__112,GL_BIG_101__117,GL_BIG_101__123,GL_BIG_101__128,GL_BIG_101__133,
			},
			// 102 %
			{
				GL_BIG_102__72, GL_BIG_102__75, GL_BIG_102__80, GL_BIG_102__84, GL_BIG_102__88,
				GL_BIG_102__92, GL_BIG_102__96, GL_BIG_102__100,GL_BIG_102__104,GL_BIG_102__108,
				GL_BIG_102__112,GL_BIG_102__117,GL_BIG_102__123,GL_BIG_102__128,GL_BIG_102__133,
			},
			// 104 %
			{
				GL_BIG_104__72, GL_BIG_104__75, GL_BIG_104__80, GL_BIG_104__84, GL_BIG_104__88,
				GL_BIG_104__92, GL_BIG_104__96, GL_BIG_104__100,GL_BIG_104__104,GL_BIG_104__108,
				GL_BIG_104__112,GL_BIG_104__117,GL_BIG_104__123,GL_BIG_104__128,GL_BIG_104__133,
			},
	}

};

unsigned int LinkMaingameProM[3][5][15] = {
	//GL SMALL
	{
		{//94%
		  gl_s_pro_90_82, gl_s_pro_90_84, gl_s_pro_90_86, gl_s_pro_90_88, gl_s_pro_90_90,
		  gl_s_pro_90_92, gl_s_pro_90_94, gl_s_pro_90_96, gl_s_pro_90_98, gl_s_pro_90_100,
		  gl_s_pro_90_102,gl_s_pro_90_104,gl_s_pro_90_106,gl_s_pro_90_108,gl_s_pro_90_110
		},
		{//95%
		  gl_s_pro_91_82, gl_s_pro_91_84, gl_s_pro_91_86, gl_s_pro_91_88, gl_s_pro_91_90,
		  gl_s_pro_91_92, gl_s_pro_91_94, gl_s_pro_91_96, gl_s_pro_91_98, gl_s_pro_91_100,
		  gl_s_pro_91_102,gl_s_pro_91_104,gl_s_pro_91_106,gl_s_pro_91_108,gl_s_pro_91_110
		},
		{//96%
		  gl_s_pro_92_82, gl_s_pro_92_84, gl_s_pro_92_86, gl_s_pro_92_88, gl_s_pro_92_90,
		  gl_s_pro_92_92, gl_s_pro_92_94, gl_s_pro_92_96, gl_s_pro_92_98, gl_s_pro_92_100,
		  gl_s_pro_92_102,gl_s_pro_92_104,gl_s_pro_92_106,gl_s_pro_92_108,gl_s_pro_92_110
		},
		{//97%
		  gl_s_pro_93_82, gl_s_pro_93_84, gl_s_pro_93_86, gl_s_pro_93_88, gl_s_pro_93_90,
		  gl_s_pro_93_92, gl_s_pro_93_94, gl_s_pro_93_96, gl_s_pro_93_98, gl_s_pro_93_100,
		  gl_s_pro_93_102,gl_s_pro_93_104,gl_s_pro_93_106,gl_s_pro_93_108,gl_s_pro_93_110
		},
		{//98%
		  gl_s_pro_94_82, gl_s_pro_94_84, gl_s_pro_94_86, gl_s_pro_94_88, gl_s_pro_94_90,
		  gl_s_pro_94_92, gl_s_pro_94_94, gl_s_pro_94_96, gl_s_pro_94_98, gl_s_pro_94_100,
		  gl_s_pro_94_102,gl_s_pro_94_104,gl_s_pro_94_106,gl_s_pro_94_108,gl_s_pro_94_110
		}
	},
	//GL MIDDLE
	{
		{//94%
			gl_m_pro_90_70, gl_m_pro_90_75, gl_m_pro_90_80, gl_m_pro_90_85, gl_m_pro_90_90,
			gl_m_pro_90_92, gl_m_pro_90_94, gl_m_pro_90_96, gl_m_pro_90_98, gl_m_pro_90_100,
			gl_m_pro_90_103,gl_m_pro_90_107,gl_m_pro_90_110,gl_m_pro_90_115,gl_m_pro_90_125
		},
		{//95%
			gl_m_pro_91_70, gl_m_pro_91_75, gl_m_pro_91_80, gl_m_pro_91_85, gl_m_pro_91_90,
			gl_m_pro_91_92, gl_m_pro_91_94, gl_m_pro_91_96, gl_m_pro_91_98, gl_m_pro_91_100,
			gl_m_pro_91_103,gl_m_pro_91_107,gl_m_pro_91_110,gl_m_pro_91_115,gl_m_pro_91_125
		},
		{//96%
			gl_m_pro_92_70, gl_m_pro_92_75, gl_m_pro_92_80, gl_m_pro_92_85, gl_m_pro_92_90,
			gl_m_pro_92_92, gl_m_pro_92_94, gl_m_pro_92_96, gl_m_pro_92_98, gl_m_pro_92_100,
			gl_m_pro_92_103,gl_m_pro_92_107,gl_m_pro_92_110,gl_m_pro_92_115,gl_m_pro_92_125
		},
		{//97%
			gl_m_pro_93_70, gl_m_pro_93_75, gl_m_pro_93_80, gl_m_pro_93_85, gl_m_pro_93_90,
			gl_m_pro_93_92, gl_m_pro_93_94, gl_m_pro_93_96, gl_m_pro_93_98, gl_m_pro_93_100,
			gl_m_pro_93_103,gl_m_pro_93_107,gl_m_pro_93_110,gl_m_pro_93_115,gl_m_pro_93_125
		},
		{//98%
			gl_m_pro_94_70, gl_m_pro_94_75, gl_m_pro_94_80, gl_m_pro_94_85, gl_m_pro_94_90,
			gl_m_pro_94_92, gl_m_pro_94_94, gl_m_pro_94_96, gl_m_pro_94_98, gl_m_pro_94_100,
			gl_m_pro_94_103,gl_m_pro_94_107,gl_m_pro_94_110,gl_m_pro_94_115,gl_m_pro_94_125
		}
	},
	//GL BIG
	{
		{//94%
			gl_b_pro_90_70, gl_b_pro_90_72, gl_b_pro_90_74, gl_b_pro_90_76, gl_b_pro_90_78,
			gl_b_pro_90_80, gl_b_pro_90_85, gl_b_pro_90_90, gl_b_pro_90_95, gl_b_pro_90_100,
			gl_b_pro_90_106,gl_b_pro_90_114,gl_b_pro_90_123,gl_b_pro_90_133,gl_b_pro_90_144
		},
		{//95%
			gl_b_pro_91_70, gl_b_pro_91_72, gl_b_pro_91_74, gl_b_pro_91_76, gl_b_pro_91_78,
			gl_b_pro_91_80, gl_b_pro_91_85, gl_b_pro_91_90, gl_b_pro_91_95, gl_b_pro_91_100,
			gl_b_pro_91_106,gl_b_pro_91_114,gl_b_pro_91_123,gl_b_pro_91_133,gl_b_pro_91_144
		},
		{//96%
			gl_b_pro_92_70, gl_b_pro_92_72, gl_b_pro_92_74, gl_b_pro_92_76, gl_b_pro_92_78,
			gl_b_pro_92_80, gl_b_pro_92_85, gl_b_pro_92_90, gl_b_pro_92_95, gl_b_pro_92_100,
			gl_b_pro_92_106,gl_b_pro_92_114,gl_b_pro_92_123,gl_b_pro_92_133,gl_b_pro_92_144
		},
		{//97%
			gl_b_pro_93_70, gl_b_pro_93_72, gl_b_pro_93_74, gl_b_pro_93_76, gl_b_pro_93_78,
			gl_b_pro_93_80, gl_b_pro_93_85, gl_b_pro_93_90, gl_b_pro_93_95, gl_b_pro_93_100,
			gl_b_pro_93_106,gl_b_pro_93_114,gl_b_pro_93_123,gl_b_pro_93_133,gl_b_pro_93_144
		},
		{//98%
			gl_b_pro_94_70, gl_b_pro_94_72, gl_b_pro_94_74, gl_b_pro_94_76, gl_b_pro_94_78,
			gl_b_pro_94_80, gl_b_pro_94_85, gl_b_pro_94_90, gl_b_pro_94_95, gl_b_pro_94_100,
			gl_b_pro_94_106,gl_b_pro_94_114,gl_b_pro_94_123,gl_b_pro_94_133,gl_b_pro_94_144
		}
	},
};/**< Main game probability mapping table(Linking) */


// Line award type odds mapping table
unsigned int  LineBingoTypeM[9] = { 0, 4, 10, 20, 40, 50, 100, 200, 1000 };/**< Line award odds mapping table */

// Line award type odds mapping table (97 type)
unsigned int  LineAwardTypeOddsMapping[13] = {
		// none
		0,
		// one cherry straight
		2,
		// two cherry straight
		5,
		// three cherry straight
		10,
		// orange straight
		10,
		// mix bar straight
		10,
		// mango straight
		14,
		// bell straight
		18,
		// watermelon straight
		20,
		// bar yellow straight
		30,
		// bar red straight
		50,
		// bar blue straight
		70,
		// seven straight
		//80,
		// wild straight
		1000
};
//
unsigned long SideBingoTypeM[8][7] = {   //ANY3   //ANY4   //ANY5   //ANY6   //ANY7   //ANY8   //ANY9
		                                 {      0,       0,       0,       0,       0,       0,     26   },//Item Blank
		                                 {      0,       0,       0,       4,       8,      20,    100   },//Item Any Bar
		                                 {      0,       4,       8,      30,     200,    1000,   2000   },//Item One Bar
		                                 {      0,       6,      20,      80,     500,    2500,   5000   },//Item Two Bar
		                                 {      0,      10,      50,     200,    1000,    5000,  10000   },//Item Three Bar
		                                 {      4,      10,      50,     250,    2500,   12500,  25000   },//Item Any  7
		                                 {      8,      20,     100,     500,    5000,   25000,  50000   },//Item Red  7
		                                 {     12,      50,     250,    1000,   10000,   50000, 100000   },//Item Blue 7
                                                                                                                            };/**< Side item award odds mapping table */

unsigned long FullFrameAwardTypeMapping[11][10] = {
		                                 //0   //1   //2   //3   //4   //5   //6   //7   //8   //9
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,    15 },//All fruit
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,    50 },//All any bar
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,    50 },//All orange
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,   100 },//All mango
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,   150 },//All bell
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,   250 },//All watermelon
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,   400 },//All cherry
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,   800 },//All bar yellow
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,  1000 },//All bar red
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,  2500 },//All bar blue
		                                //{  0,    0,    2,    5,   20,   40,   60,   80,  100,   200 },//All seven
		                                //{  0,    0,    0,  100,  200,  400,  800, 1000, 2000,  4000 },//All ???
		                                {  0,    0,    0,    0,    0,    0,    0,    0,    0,  4000 },//All ???
																															};

unsigned int SpecialGameLightAwardMultiple[9] = {
		2,
		5,
	   10,
	   15,
	   20,
	   50,
	   70,
	  100,
	  200
};

//
unsigned int  DoUpM[6][2]   = {   //Do  //Don't
								{   90,   10},
								{   80,   20},
								{   70,   30},
								{   60,   40},
								{   50,   50},
								{  100,    0}
};/**< Pull up probability mapping table */
//
unsigned int  DoDownM[6][2] = {   //Do  //Don't
								{   90,   10},
								{   80,   20},
								{   70,   30},
								{   60,   40},
								{   50,   50},
								{  100,    0},
};/**< Pull down probability mapping table */

/**
 * @brief Frame probability type fixed 1.
 * @param mt Mersenne twister algorithm instance
 * @param pctrl Probability controller
 * @retval Item type
 *
 */
int _FrameProTypeFixed_Slot1(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_fixed_random_Base);

    if(ram < SCROLL_1_PROBABILITY_STEP_1)
       return ITEM_CHERRY;
    else if(ram >=SCROLL_1_PROBABILITY_STEP_1 && ram <SCROLL_1_PROBABILITY_STEP_2)
       return ITEM_ORANGE;
    else if(ram >=SCROLL_1_PROBABILITY_STEP_2 && ram <SCROLL_1_PROBABILITY_STEP_3)
       return ITEM_MANGO;
    else if(ram >=SCROLL_1_PROBABILITY_STEP_3 && ram <SCROLL_1_PROBABILITY_STEP_4)
       return ITEM_BELL;
    else if(ram >=SCROLL_1_PROBABILITY_STEP_4 && ram <SCROLL_1_PROBABILITY_STEP_5)
       return ITEM_WATERMELON;
    else if(ram >=SCROLL_1_PROBABILITY_STEP_5 && ram <SCROLL_1_PROBABILITY_STEP_6)
       return ITEM_BAR_YELLOW;
    else if(ram >=SCROLL_1_PROBABILITY_STEP_6 && ram <SCROLL_1_PROBABILITY_STEP_7)
       return ITEM_BAR_RED;
    else if(ram >=SCROLL_1_PROBABILITY_STEP_7 && ram <SCROLL_1_PROBABILITY_STEP_8)
       return ITEM_BAR_BLUE;
    else if(ram >=SCROLL_1_PROBABILITY_STEP_8 && ram <SCROLL_1_PROBABILITY_STEP_9)
       return ITEM_WILD;

    //else if(ram >=SCROLL_1_PROBABILITY_STEP_8 && ram <SCROLL_1_PROBABILITY_STEP_9)
       //return ITEM_SEVEN;
    //else if(ram >=SCROLL_1_PROBABILITY_STEP_9 && ram <SCROLL_1_PROBABILITY_STEP_10)
       //return ITEM_WILD;

#if 0
    if(ram < _scoroll_1_pro_fixed_step1)
       return ran_Item_Blank;
    else if(ram >=_scoroll_1_pro_fixed_step1 && ram <_scoroll_1_pro_fixed_step2)
       return ran_Item_One_Bar;
    else if(ram >=_scoroll_1_pro_fixed_step2 && ram <_scoroll_1_pro_fixed_step3)
       return ran_Item_Two_Bar;
    else if(ram >=_scoroll_1_pro_fixed_step3 && ram <_scoroll_1_pro_fixed_step4)
       return ran_Item_Three_Bar;
    else if(ram >=_scoroll_1_pro_fixed_step4 && ram <_scoroll_1_pro_fixed_step5)
       return ran_Item_Red_7;
    else if(ram >=_scoroll_1_pro_fixed_step5 && ram <_scoroll_1_pro_fixed_step6)
       return ran_Item_Blue_7;
    else if(ram >=_scoroll_1_pro_fixed_step6 && ram <_scoroll_1_pro_fixed_step7)
       return ran_Item_Joker;
#endif

	return 0;
}
/**
 * @brief Frame probability type fixed 2.
 * @param mt Mersenne twister algorithm instance
 * @param pctrl Probability controller
 * @retval Item type
 *
 */
int _FrameProTypeFixed_Slot2(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_fixed_random_Base);

    if(ram < SCROLL_2_PROBABILITY_STEP_1)
       return ITEM_CHERRY;
    else if(ram >=SCROLL_2_PROBABILITY_STEP_1 && ram <SCROLL_2_PROBABILITY_STEP_2)
       return ITEM_ORANGE;
    else if(ram >=SCROLL_2_PROBABILITY_STEP_2 && ram <SCROLL_2_PROBABILITY_STEP_3)
       return ITEM_MANGO;
    else if(ram >=SCROLL_2_PROBABILITY_STEP_3 && ram <SCROLL_2_PROBABILITY_STEP_4)
       return ITEM_BELL;
    else if(ram >=SCROLL_2_PROBABILITY_STEP_4 && ram <SCROLL_2_PROBABILITY_STEP_5)
       return ITEM_WATERMELON;
    else if(ram >=SCROLL_2_PROBABILITY_STEP_5 && ram <SCROLL_2_PROBABILITY_STEP_6)
       return ITEM_BAR_YELLOW;
    else if(ram >=SCROLL_2_PROBABILITY_STEP_6 && ram <SCROLL_2_PROBABILITY_STEP_7)
       return ITEM_BAR_RED;
    else if(ram >=SCROLL_2_PROBABILITY_STEP_7 && ram <SCROLL_2_PROBABILITY_STEP_8)
       return ITEM_BAR_BLUE;
    else if(ram >=SCROLL_2_PROBABILITY_STEP_8 && ram <SCROLL_2_PROBABILITY_STEP_9)
       return ITEM_WILD;

    //else if(ram >=SCROLL_2_PROBABILITY_STEP_8 && ram <SCROLL_2_PROBABILITY_STEP_9)
       //return ITEM_SEVEN;
    //else if(ram >=SCROLL_2_PROBABILITY_STEP_9 && ram <SCROLL_2_PROBABILITY_STEP_10)
       //return ITEM_WILD;

#if 0
    if(ram < _scoroll_2_pro_fixed_step1)
       return ran_Item_Blank;
    else if(ram >=_scoroll_2_pro_fixed_step1 && ram <_scoroll_2_pro_fixed_step2)
       return ran_Item_One_Bar;
    else if(ram >=_scoroll_2_pro_fixed_step2 && ram <_scoroll_2_pro_fixed_step3)
       return ran_Item_Two_Bar;
    else if(ram >=_scoroll_2_pro_fixed_step3 && ram <_scoroll_2_pro_fixed_step4)
       return ran_Item_Three_Bar;
    else if(ram >=_scoroll_2_pro_fixed_step4 && ram <_scoroll_2_pro_fixed_step5)
       return ran_Item_Red_7;
    else if(ram >=_scoroll_2_pro_fixed_step5 && ram <_scoroll_2_pro_fixed_step6)
       return ran_Item_Blue_7;
    else if(ram >=_scoroll_2_pro_fixed_step6 && ram <_scoroll_2_pro_fixed_step7)
       return ran_Item_Joker;
#endif

	return 0;
}
/**
 * @brief Frame probability type fixed 3.
 * @param mt Mersenne twister algorithm instance
 * @param pctrl Probability controller
 * @retval Item type
 *
 */
int _FrameProTypeFixed_Slot3(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_fixed_random_Base);

    if(ram < SCROLL_3_PROBABILITY_STEP_1)
       return ITEM_CHERRY;
    else if(ram >=SCROLL_3_PROBABILITY_STEP_1 && ram <SCROLL_3_PROBABILITY_STEP_2)
       return ITEM_ORANGE;
    else if(ram >=SCROLL_3_PROBABILITY_STEP_2 && ram <SCROLL_3_PROBABILITY_STEP_3)
       return ITEM_MANGO;
    else if(ram >=SCROLL_3_PROBABILITY_STEP_3 && ram <SCROLL_3_PROBABILITY_STEP_4)
       return ITEM_BELL;
    else if(ram >=SCROLL_3_PROBABILITY_STEP_4 && ram <SCROLL_3_PROBABILITY_STEP_5)
       return ITEM_WATERMELON;
    else if(ram >=SCROLL_3_PROBABILITY_STEP_5 && ram <SCROLL_3_PROBABILITY_STEP_6)
       return ITEM_BAR_YELLOW;
    else if(ram >=SCROLL_3_PROBABILITY_STEP_6 && ram <SCROLL_3_PROBABILITY_STEP_7)
       return ITEM_BAR_RED;
    else if(ram >=SCROLL_3_PROBABILITY_STEP_7 && ram <SCROLL_3_PROBABILITY_STEP_8)
       return ITEM_BAR_BLUE;
    else if(ram >=SCROLL_3_PROBABILITY_STEP_8 && ram <SCROLL_3_PROBABILITY_STEP_9)
       return ITEM_WILD;

    //else if(ram >=SCROLL_3_PROBABILITY_STEP_8 && ram <SCROLL_3_PROBABILITY_STEP_9)
       //return ITEM_SEVEN;
    //else if(ram >=SCROLL_3_PROBABILITY_STEP_9 && ram <SCROLL_3_PROBABILITY_STEP_10)
       //return ITEM_WILD;

#if 0
    if(ram < _scoroll_3_pro_fixed_step1)
       return ran_Item_Blank;
    else if(ram >=_scoroll_3_pro_fixed_step1 && ram <_scoroll_3_pro_fixed_step2)
       return ran_Item_One_Bar;
    else if(ram >=_scoroll_3_pro_fixed_step2 && ram <_scoroll_3_pro_fixed_step3)
       return ran_Item_Two_Bar;
    else if(ram >=_scoroll_3_pro_fixed_step3 && ram <_scoroll_3_pro_fixed_step4)
       return ran_Item_Three_Bar;
    else if(ram >=_scoroll_3_pro_fixed_step4 && ram <_scoroll_3_pro_fixed_step5)
       return ran_Item_Red_7;
    else if(ram >=_scoroll_3_pro_fixed_step5 && ram <_scoroll_3_pro_fixed_step6)
       return ran_Item_Blue_7;
    else if(ram >=_scoroll_3_pro_fixed_step6 && ram <_scoroll_3_pro_fixed_step7)
       return ran_Item_Joker;
#endif

	return 0;
}
/**
 * @brief Frame probability type fixed 4.
 * @param mt Mersenne twister algorithm instance
 * @param pctrl Probability controller
 * @retval Item type
 *
 */
int _FrameProTypeFixed_Slot4(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_fixed_random_Base);

    if(ram < SCROLL_4_PROBABILITY_STEP_1)
       return ITEM_CHERRY;
    else if(ram >=SCROLL_4_PROBABILITY_STEP_1 && ram <SCROLL_4_PROBABILITY_STEP_2)
       return ITEM_ORANGE;
    else if(ram >=SCROLL_4_PROBABILITY_STEP_2 && ram <SCROLL_4_PROBABILITY_STEP_3)
       return ITEM_MANGO;
    else if(ram >=SCROLL_4_PROBABILITY_STEP_3 && ram <SCROLL_4_PROBABILITY_STEP_4)
       return ITEM_BELL;
    else if(ram >=SCROLL_4_PROBABILITY_STEP_4 && ram <SCROLL_4_PROBABILITY_STEP_5)
       return ITEM_WATERMELON;
    else if(ram >=SCROLL_4_PROBABILITY_STEP_5 && ram <SCROLL_4_PROBABILITY_STEP_6)
       return ITEM_BAR_YELLOW;
    else if(ram >=SCROLL_4_PROBABILITY_STEP_6 && ram <SCROLL_4_PROBABILITY_STEP_7)
       return ITEM_BAR_RED;
    else if(ram >=SCROLL_4_PROBABILITY_STEP_7 && ram <SCROLL_4_PROBABILITY_STEP_8)
       return ITEM_BAR_BLUE;
    else if(ram >=SCROLL_4_PROBABILITY_STEP_8 && ram <SCROLL_4_PROBABILITY_STEP_9)
       return ITEM_WILD;


    //else if(ram >=SCROLL_4_PROBABILITY_STEP_8 && ram <SCROLL_4_PROBABILITY_STEP_9)
       //return ITEM_SEVEN;
    //else if(ram >=SCROLL_4_PROBABILITY_STEP_9 && ram <SCROLL_4_PROBABILITY_STEP_10)
       //return ITEM_WILD;

#if 0
    if(ram < _scoroll_4_pro_fixed_step1)
       return ran_Item_Blank;
    else if(ram >=_scoroll_4_pro_fixed_step1 && ram <_scoroll_4_pro_fixed_step2)
       return ran_Item_One_Bar;
    else if(ram >=_scoroll_4_pro_fixed_step2 && ram <_scoroll_4_pro_fixed_step3)
       return ran_Item_Two_Bar;
    else if(ram >=_scoroll_4_pro_fixed_step3 && ram <_scoroll_4_pro_fixed_step4)
       return ran_Item_Three_Bar;
    else if(ram >=_scoroll_4_pro_fixed_step4 && ram <_scoroll_4_pro_fixed_step5)
       return ran_Item_Red_7;
    else if(ram >=_scoroll_4_pro_fixed_step5 && ram <_scoroll_4_pro_fixed_step6)
       return ran_Item_Blue_7;
    else if(ram >=_scoroll_4_pro_fixed_step6 && ram <_scoroll_4_pro_fixed_step7)
       return ran_Item_Joker;
#endif

	return 0;
}
/**
 * @brief Frame probability type fixed 5.
 * @param mt Mersenne twister algorithm instance
 * @param pctrl Probability controller
 * @retval Item type
 *
 */
int _FrameProTypeFixed_Slot5(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_fixed_random_Base);

    if(ram < SCROLL_5_PROBABILITY_STEP_1)
       return ITEM_CHERRY;
    else if(ram >=SCROLL_5_PROBABILITY_STEP_1 && ram <SCROLL_5_PROBABILITY_STEP_2)
       return ITEM_ORANGE;
    else if(ram >=SCROLL_5_PROBABILITY_STEP_2 && ram <SCROLL_5_PROBABILITY_STEP_3)
       return ITEM_MANGO;
    else if(ram >=SCROLL_5_PROBABILITY_STEP_3 && ram <SCROLL_5_PROBABILITY_STEP_4)
       return ITEM_BELL;
    else if(ram >=SCROLL_5_PROBABILITY_STEP_4 && ram <SCROLL_5_PROBABILITY_STEP_5)
       return ITEM_WATERMELON;
    else if(ram >=SCROLL_5_PROBABILITY_STEP_5 && ram <SCROLL_5_PROBABILITY_STEP_6)
       return ITEM_BAR_YELLOW;
    else if(ram >=SCROLL_5_PROBABILITY_STEP_6 && ram <SCROLL_5_PROBABILITY_STEP_7)
       return ITEM_BAR_RED;
    else if(ram >=SCROLL_5_PROBABILITY_STEP_7 && ram <SCROLL_5_PROBABILITY_STEP_8)
       return ITEM_BAR_BLUE;
    else if(ram >=SCROLL_5_PROBABILITY_STEP_8 && ram <SCROLL_5_PROBABILITY_STEP_9)
       return ITEM_WILD;

    //else if(ram >=SCROLL_5_PROBABILITY_STEP_8 && ram <SCROLL_5_PROBABILITY_STEP_9)
       //return ITEM_SEVEN;
    //else if(ram >=SCROLL_5_PROBABILITY_STEP_9 && ram <SCROLL_5_PROBABILITY_STEP_10)
       //return ITEM_WILD;

#if 0
    if(ram < _scoroll_5_pro_fixed_step1)
       return ran_Item_Blank;
    else if(ram >=_scoroll_5_pro_fixed_step1 && ram <_scoroll_5_pro_fixed_step2)
       return ran_Item_One_Bar;
    else if(ram >=_scoroll_5_pro_fixed_step2 && ram <_scoroll_5_pro_fixed_step3)
       return ran_Item_Two_Bar;
    else if(ram >=_scoroll_5_pro_fixed_step3 && ram <_scoroll_5_pro_fixed_step4)
       return ran_Item_Three_Bar;
    else if(ram >=_scoroll_5_pro_fixed_step4 && ram <_scoroll_5_pro_fixed_step5)
       return ran_Item_Red_7;
    else if(ram >=_scoroll_5_pro_fixed_step5 && ram <_scoroll_5_pro_fixed_step6)
       return ran_Item_Blue_7;
    else if(ram >=_scoroll_5_pro_fixed_step6 && ram <_scoroll_5_pro_fixed_step7)
       return ran_Item_Joker;
#endif

	return 0;
}
/**
 * @brief Frame probability type fixed 6.
 * @param mt Mersenne twister algorithm instance
 * @param pctrl Probability controller
 * @retval Item type
 *
 */
int _FrameProTypeFixed_Slot6(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_fixed_random_Base);

    if(ram < SCROLL_6_PROBABILITY_STEP_1)
       return ITEM_CHERRY;
    else if(ram >=SCROLL_6_PROBABILITY_STEP_1 && ram <SCROLL_6_PROBABILITY_STEP_2)
       return ITEM_ORANGE;
    else if(ram >=SCROLL_6_PROBABILITY_STEP_2 && ram <SCROLL_6_PROBABILITY_STEP_3)
       return ITEM_MANGO;
    else if(ram >=SCROLL_6_PROBABILITY_STEP_3 && ram <SCROLL_6_PROBABILITY_STEP_4)
       return ITEM_BELL;
    else if(ram >=SCROLL_6_PROBABILITY_STEP_4 && ram <SCROLL_6_PROBABILITY_STEP_5)
       return ITEM_WATERMELON;
    else if(ram >=SCROLL_6_PROBABILITY_STEP_5 && ram <SCROLL_6_PROBABILITY_STEP_6)
       return ITEM_BAR_YELLOW;
    else if(ram >=SCROLL_6_PROBABILITY_STEP_6 && ram <SCROLL_6_PROBABILITY_STEP_7)
       return ITEM_BAR_RED;
    else if(ram >=SCROLL_6_PROBABILITY_STEP_7 && ram <SCROLL_6_PROBABILITY_STEP_8)
       return ITEM_BAR_BLUE;
    else if(ram >=SCROLL_6_PROBABILITY_STEP_8 && ram <SCROLL_6_PROBABILITY_STEP_9)
       return ITEM_WILD;

    //else if(ram >=SCROLL_6_PROBABILITY_STEP_8 && ram <SCROLL_6_PROBABILITY_STEP_9)
       //return ITEM_SEVEN;
    //else if(ram >=SCROLL_6_PROBABILITY_STEP_9 && ram <SCROLL_6_PROBABILITY_STEP_10)
       //return ITEM_WILD;

#if 0
    if(ram < _scoroll_6_pro_fixed_step1)
       return ran_Item_Blank;
    else if(ram >=_scoroll_6_pro_fixed_step1 && ram <_scoroll_6_pro_fixed_step2)
       return ran_Item_One_Bar;
    else if(ram >=_scoroll_6_pro_fixed_step2 && ram <_scoroll_6_pro_fixed_step3)
       return ran_Item_Two_Bar;
    else if(ram >=_scoroll_6_pro_fixed_step3 && ram <_scoroll_6_pro_fixed_step4)
       return ran_Item_Three_Bar;
    else if(ram >=_scoroll_6_pro_fixed_step4 && ram <_scoroll_6_pro_fixed_step5)
       return ran_Item_Red_7;
    else if(ram >=_scoroll_6_pro_fixed_step5 && ram <_scoroll_6_pro_fixed_step6)
       return ran_Item_Blue_7;
    else if(ram >=_scoroll_6_pro_fixed_step6 && ram <_scoroll_6_pro_fixed_step7)
       return ran_Item_Joker;
#endif

	return 0;
}
/**
 * @brief Frame probability type fixed 7.
 * @param mt Mersenne twister algorithm instance
 * @param pctrl Probability controller
 * @retval Item type
 *
 */
int _FrameProTypeFixed_Slot8(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_fixed_random_Base);

    if(ram < SCROLL_8_PROBABILITY_STEP_1)
       return ITEM_CHERRY;
    else if(ram >=SCROLL_8_PROBABILITY_STEP_1 && ram <SCROLL_8_PROBABILITY_STEP_2)
       return ITEM_ORANGE;
    else if(ram >=SCROLL_8_PROBABILITY_STEP_2 && ram <SCROLL_8_PROBABILITY_STEP_3)
       return ITEM_MANGO;
    else if(ram >=SCROLL_8_PROBABILITY_STEP_3 && ram <SCROLL_8_PROBABILITY_STEP_4)
       return ITEM_BELL;
    else if(ram >=SCROLL_8_PROBABILITY_STEP_4 && ram <SCROLL_8_PROBABILITY_STEP_5)
       return ITEM_WATERMELON;
    else if(ram >=SCROLL_8_PROBABILITY_STEP_5 && ram <SCROLL_8_PROBABILITY_STEP_6)
       return ITEM_BAR_YELLOW;
    else if(ram >=SCROLL_8_PROBABILITY_STEP_6 && ram <SCROLL_8_PROBABILITY_STEP_7)
       return ITEM_BAR_RED;
    else if(ram >=SCROLL_8_PROBABILITY_STEP_7 && ram <SCROLL_8_PROBABILITY_STEP_8)
       return ITEM_BAR_BLUE;
    else if(ram >=SCROLL_8_PROBABILITY_STEP_8 && ram <SCROLL_8_PROBABILITY_STEP_9)
       return ITEM_WILD;

    //else if(ram >=SCROLL_7_PROBABILITY_STEP_8 && ram <SCROLL_7_PROBABILITY_STEP_9)
       //return ITEM_SEVEN;
    //else if(ram >=SCROLL_7_PROBABILITY_STEP_9 && ram <SCROLL_7_PROBABILITY_STEP_10)
       //return ITEM_WILD;

#if 0

    if(ram < _scoroll_7_pro_fixed_step1)
       return ran_Item_Blank;
    else if(ram >=_scoroll_7_pro_fixed_step1 && ram <_scoroll_7_pro_fixed_step2)
       return ran_Item_One_Bar;
    else if(ram >=_scoroll_7_pro_fixed_step2 && ram <_scoroll_7_pro_fixed_step3)
       return ran_Item_Two_Bar;
    else if(ram >=_scoroll_7_pro_fixed_step3 && ram <_scoroll_7_pro_fixed_step4)
       return ran_Item_Three_Bar;
    else if(ram >=_scoroll_7_pro_fixed_step4 && ram <_scoroll_7_pro_fixed_step5)
       return ran_Item_Red_7;
    else if(ram >=_scoroll_7_pro_fixed_step5 && ram <_scoroll_7_pro_fixed_step6)
       return ran_Item_Blue_7;
    else if(ram >=_scoroll_7_pro_fixed_step6 && ram <_scoroll_7_pro_fixed_step7)
       return ran_Item_Joker;
#endif

	return 0;
}
/**
 * @brief Frame probability type fixed 8.
 * @param mt Mersenne twister algorithm instance
 * @param pctrl Probability controller
 * @retval Item type
 *
 */
int _FrameProTypeFixed_Slot9(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_fixed_random_Base);

    if(ram < SCROLL_9_PROBABILITY_STEP_1)
       return ITEM_CHERRY;
    else if(ram >=SCROLL_9_PROBABILITY_STEP_1 && ram <SCROLL_9_PROBABILITY_STEP_2)
       return ITEM_ORANGE;
    else if(ram >=SCROLL_9_PROBABILITY_STEP_2 && ram <SCROLL_9_PROBABILITY_STEP_3)
       return ITEM_MANGO;
    else if(ram >=SCROLL_9_PROBABILITY_STEP_3 && ram <SCROLL_9_PROBABILITY_STEP_4)
       return ITEM_BELL;
    else if(ram >=SCROLL_9_PROBABILITY_STEP_4 && ram <SCROLL_9_PROBABILITY_STEP_5)
       return ITEM_WATERMELON;
    else if(ram >=SCROLL_9_PROBABILITY_STEP_5 && ram <SCROLL_9_PROBABILITY_STEP_6)
       return ITEM_BAR_YELLOW;
    else if(ram >=SCROLL_9_PROBABILITY_STEP_6 && ram <SCROLL_9_PROBABILITY_STEP_7)
       return ITEM_BAR_RED;
    else if(ram >=SCROLL_9_PROBABILITY_STEP_7 && ram <SCROLL_9_PROBABILITY_STEP_8)
       return ITEM_BAR_BLUE;
    else if(ram >=SCROLL_9_PROBABILITY_STEP_8 && ram <SCROLL_9_PROBABILITY_STEP_9)
       return ITEM_WILD;

    //else if(ram >=SCROLL_8_PROBABILITY_STEP_8 && ram <SCROLL_8_PROBABILITY_STEP_9)
       //return ITEM_SEVEN;
    //else if(ram >=SCROLL_8_PROBABILITY_STEP_9 && ram <SCROLL_8_PROBABILITY_STEP_10)
       //return ITEM_WILD;

#if 0
    if(ram < _scoroll_8_pro_fixed_step1)
       return ran_Item_Blank;
    else if(ram >=_scoroll_8_pro_fixed_step1 && ram <_scoroll_8_pro_fixed_step2)
       return ran_Item_One_Bar;
    else if(ram >=_scoroll_8_pro_fixed_step2 && ram <_scoroll_8_pro_fixed_step3)
       return ran_Item_Two_Bar;
    else if(ram >=_scoroll_8_pro_fixed_step3 && ram <_scoroll_8_pro_fixed_step4)
       return ran_Item_Three_Bar;
    else if(ram >=_scoroll_8_pro_fixed_step4 && ram <_scoroll_8_pro_fixed_step5)
       return ran_Item_Red_7;
    else if(ram >=_scoroll_8_pro_fixed_step5 && ram <_scoroll_8_pro_fixed_step6)
       return ran_Item_Blue_7;
    else if(ram >=_scoroll_8_pro_fixed_step6 && ram <_scoroll_8_pro_fixed_step7)
       return ran_Item_Joker;
#endif

	return 0;
}
/**
 * @brief Frame probability type mutable.
 * @param mt Mersenne twister algorithm instance
 * @param pctrl Probability controller
 * @retval Item type
 *
 */
int _FrameProTypeMutable_Slot1(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_Mutable_random_Base);

    switch(pctrl->m_probabilityControlStatus){
     case status_normal:

        if(ram < (MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]))
  		   return ITEM_CHERRY;//ran_Item_Blank;
  		else if(ram >=(MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]) &&
  				 ram < (MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]))
  		   return ITEM_ORANGE;//ran_Item_One_Bar;
  		else if(ram >=(MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]) &&
  				 ram < (MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]))
  		   return ITEM_MANGO;//ran_Item_Two_Bar;
  		else if(ram >=(MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]) &&
  				 ram < (MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]))
  		   return ITEM_BELL;//ran_Item_Three_Bar;
  		else if(ram >=(MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]) &&
  				 ram < (MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]))
  		   return ITEM_WATERMELON;//ran_Item_Red_7;
  		else if(ram >=(MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]) &&
  				 ram < (MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]))
  		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
  		else if(ram >=(MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]) &&
  				 ram < (MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6]))
  		   return ITEM_BAR_RED;//ran_Item_Joker;
  		else if(ram >=(MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6]) &&
  				 ram < (MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6] + MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][7]))
  		   return ITEM_BAR_BLUE;//ran_Item_Joker;
  		else if(ram >=(MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6] + MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][7]) &&
  				 ram < (MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6] + MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][7] + MainGameSlot1ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][8]))
  		   return ITEM_WILD;//ran_Item_Joker;

         break;

	 case status_check2_up:

         if(ram < (MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]) &&
 				 ram < (MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]) &&
 				 ram < (MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]) &&
 				 ram < (MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]))
 		   return ITEM_BELL;//ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]) &&
 				 ram < (MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]) &&
 				 ram < (MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]) &&
 				 ram < (MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]) &&
 				 ram < (MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][7]) &&
 				 ram < (MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][7]+MainGameSlot1ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

     	break;

	 case status_check0_down:
	 case status_check1_down:
	 case status_check2_down:

         if(ram < (MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]) &&
 				 ram < (MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]) &&
 				 ram < (MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]) &&
 				 ram < (MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]))
 		   return ITEM_BELL;//ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]) &&
 				 ram < (MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]) &&
 				 ram < (MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]) &&
 				 ram < (MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]) &&
 				 ram < (MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][7]) &&
 				 ram < (MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][7]+MainGameSlot1ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

     	break;

     case status_connect:

         if(ram < (MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]) &&
 				 ram < (MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]) &&
 				 ram < (MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]) &&
 				 ram < (MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]))
 		   return ITEM_BELL;////ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]) &&
 				 ram < (MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]) &&
 				 ram < (MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]) &&
 				 ram < (MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]) &&
 				 ram < (MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][7]) &&
 				 ram < (MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][7]+MainGameSlot1ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

         break;

     default:
     	break;
     }

 	return 0;
}

int _FrameProTypeMutable_Slot5(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_Mutable_random_Base);

    switch(pctrl->m_probabilityControlStatus){
     case status_normal:

         if(ram < (MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]))
 		   return ITEM_BELL;//ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6] + MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6] + MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][7]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6] + MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][7] + MainGameSlot5ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

         break;

	 case status_check2_up:

         if(ram < (MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]) &&
 				 ram < (MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]) &&
 				 ram < (MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]) &&
 				 ram < (MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]))
 		   return ITEM_BELL;//ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]) &&
 				 ram < (MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]) &&
 				 ram < (MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]) &&
 				 ram < (MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]) &&
 				 ram < (MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][7]) &&
 				 ram < (MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][7]+MainGameSlot5ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

     	break;

	 case status_check0_down:
	 case status_check1_down:
	 case status_check2_down:

        if(ram < (MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]) &&
 				 ram < (MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]) &&
 				 ram < (MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]) &&
 				 ram < (MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]))
 		   return ITEM_BELL;//ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]) &&
 				 ram < (MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]) &&
 				 ram < (MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]) &&
 				 ram < (MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]) &&
 				 ram < (MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][7]) &&
 				 ram < (MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][7]+MainGameSlot5ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

     	break;

     case status_connect:

        if(ram < (MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]))
 		   return ITEM_BELL;////ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][7]) &&
 				 ram < (MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][7]+MainGameSlot5ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

         break;

     default:
     	break;
     }

 	return 0;
}

int _FrameProTypeMutable_Slot7(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_Mutable_random_Base);

    switch(pctrl->m_probabilityControlStatus){
     case status_normal:

         if(ram < (MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]))
 		   return ITEM_BELL;//ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6] + MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6] + MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][7]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][6] + MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][7] + MainGameSlot7ProbabilityMatrix[pctrl->m_internalGameLevel][pctrl->m_normalM[pctrl->m_indexOfRunning%15]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

         break;

	 case status_check2_up:

         if(ram < (MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]) &&
 				 ram < (MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]) &&
 				 ram < (MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]) &&
 				 ram < (MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]))
 		   return ITEM_BELL;//ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]) &&
 				 ram < (MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]) &&
 				 ram < (MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]) &&
 				 ram < (MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]) &&
 				 ram < (MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][7]) &&
 				 ram < (MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][6]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][7]+MainGameSlot7ProbabilityUpMatrix[pctrl->m_upM[pctrl->m_indexOfRunning]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

     	break;

	 case status_check0_down:
	 case status_check1_down:
	 case status_check2_down:

         if(ram < (MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]) &&
 				 ram < (MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]) &&
 				 ram < (MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]) &&
 				 ram < (MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]))
 		   return ITEM_BELL;//ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]) &&
 				 ram < (MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]) &&
 				 ram < (MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]) &&
 				 ram < (MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]) &&
 				 ram < (MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][7]) &&
 				 ram < (MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][0]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][1]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][2]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][3]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][4]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][5]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][6]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][7]+MainGameSlot7ProbabilityDownMatrix[pctrl->m_downM[pctrl->m_indexOfRunning]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

     	break;

     case status_connect:

         if(ram < (MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]))
 		   return ITEM_CHERRY;//ran_Item_Blank;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]))
 		   return ITEM_ORANGE;//ran_Item_One_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]))
 		   return ITEM_MANGO;//ran_Item_Two_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]))
 		   return ITEM_BELL;////ran_Item_Three_Bar;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]))
 		   return ITEM_WATERMELON;//ran_Item_Red_7;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]))
 		   return ITEM_BAR_YELLOW;//ran_Item_Blue_7;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]))
 		   return ITEM_BAR_RED;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][7]))
 		   return ITEM_BAR_BLUE;//ran_Item_Joker;
 		else if(ram >=(MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][7]) &&
 				 ram < (MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][0]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][1]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][2]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][3]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][4]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][5]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][6]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][7]+MainGameSlot7ProbabilityMatrix[*(pctrl->m_GameLevelSettingConnect)][pctrl->m_connectM[pctrl->m_indexOfRunning%15]][8]))
 		   return ITEM_WILD;//ran_Item_Joker;

         break;

     default:
     	break;
     }

 	return 0;
}

#ifdef TEST_MAIN_GAME_COMPUTE_SCORE
/**
 * @brief For test frame's probability.
 *
 * @param mt Pointer to MTSYSTEM
 * @param pctrl Pointer to PROBABILITYCONTROL
 *
 * @author SHIE-BINGSHIUE
 * @date 2010-08-17
 */
int _FrameProTypeTest(MTRANDOM* mt,MAINGAMEPROBABILITYCONTROL* pctrl){
    unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_fixed_random_Base);

    if(ram < 1000)
       return ITEM_CHERRY;
    else if(ram >=1000 && ram <2000)
       return ITEM_ORANGE;
    else if(ram >=2000 && ram <3000)
       return ITEM_MANGO;
    else if(ram >=3000 && ram <4000)
       return ITEM_BELL;
    else if(ram >=4000 && ram <5000)
       return ITEM_WATERMELON;
    else if(ram >=5000 && ram <6000)
       return ITEM_BAR_YELLOW;
    else if(ram >=6000 && ram <7000)
       return ITEM_BAR_RED;
    else if(ram >=7000 && ram <8000)
       return ITEM_BAR_BLUE;
    else if(ram >=8000 && ram <10000)
       return ITEM_WILD;
#if 0
	unsigned int ram = 0;
    ram = mt->getRandomLong(_scroll_pro_Mutable_random_Base);

    if(ram < 2000)
       return ran_Item_Blank;
    else if(ram >=2000 && ram <5000)
       return ran_Item_One_Bar;
    else if(ram >=5000 && ram <6000)
       return ran_Item_Two_Bar;
    else if(ram >=6000 && ram <7000)
       return ran_Item_Three_Bar;
    else if(ram >=7000 && ram <8000)
       return ran_Item_Red_7;
    else if(ram >=8000 && ram <9000)
       return ran_Item_Blue_7;
    else if(ram >=9000 && ram <10000)
       return ran_Item_Joker;
#endif
	return 0;

}
#endif


#endif /* PROBABILITYSUBFUNC_H_ */
